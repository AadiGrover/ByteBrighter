{"ast":null,"code":"var _jsxFileName = \"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/InstructorDashboard/InstructorChart.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nexport default function InstructorChart(_ref) {\n  _s();\n  let {\n    courses\n  } = _ref;\n  // State to keep track of the currently selected chart\n  const [currChart, setCurrChart] = useState(\"students\");\n\n  // Function to generate random colors for the chart\n  const generateRandomColors = numColors => {\n    const colors = [];\n    for (let i = 0; i < numColors; i++) {\n      const color = `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      colors.push(color);\n    }\n    return colors;\n  };\n\n  // Data for the chart displaying student information\n  const chartDataStudents = {\n    labels: courses.map(course => course.courseName),\n    datasets: [{\n      data: courses.map(course => course.totalStudentsEnrolled),\n      backgroundColor: generateRandomColors(courses.length)\n    }]\n  };\n\n  // Data for the chart displaying income information\n  const chartIncomeData = {\n    labels: courses.map(course => course.courseName),\n    datasets: [{\n      data: courses.map(course => course.totalAmountGenerated),\n      backgroundColor: generateRandomColors(courses.length)\n    }]\n  };\n\n  // Options for the chart\n  const options = {\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-1 flex-col gap-y-4 rounded-md bg-richblack-800 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg font-bold text-richblack-5\",\n      children: \"Visualize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-4 font-semibold\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrChart(\"students\"),\n        className: `rounded-sm p-1 px-3 transition-all duration-200 ${currChart === \"students\" ? \"bg-richblack-700 text-richblack-50\" : \"text-richblack-400\"}`,\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrChart(\"income\"),\n        className: `rounded-sm p-1 px-3 transition-all duration-200 ${currChart === \"income\" ? \"bg-richblack-700 text-richblack-50\" : \"text-richblack-400\"}`,\n        children: \"Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mx-auto aspect-square h-full w-full\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: currChart === \"students\" ? chartDataStudents : chartIncomeData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(InstructorChart, \"lNDmUUtJuBQFUgt3dthOhShSmcs=\");\n_c = InstructorChart;\nvar _c;\n$RefreshReg$(_c, \"InstructorChart\");","map":{"version":3,"names":["useState","Chart","registerables","Pie","jsxDEV","_jsxDEV","register","InstructorChart","_ref","_s","courses","currChart","setCurrChart","generateRandomColors","numColors","colors","i","color","Math","floor","random","push","chartDataStudents","labels","map","course","courseName","datasets","data","totalStudentsEnrolled","backgroundColor","length","chartIncomeData","totalAmountGenerated","options","maintainAspectRatio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/InstructorDashboard/InstructorChart.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport { Chart, registerables } from \"chart.js\"\r\nimport { Pie } from \"react-chartjs-2\"\r\n\r\nChart.register(...registerables)\r\n\r\nexport default function InstructorChart({ courses }) {\r\n  // State to keep track of the currently selected chart\r\n  const [currChart, setCurrChart] = useState(\"students\")\r\n\r\n  // Function to generate random colors for the chart\r\n  const generateRandomColors = (numColors) => {\r\n    const colors = []\r\n    for (let i = 0; i < numColors; i++) {\r\n      const color = `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(\r\n        Math.random() * 256\r\n      )}, ${Math.floor(Math.random() * 256)})`\r\n      colors.push(color)\r\n    }\r\n    return colors\r\n  }\r\n\r\n  // Data for the chart displaying student information\r\n  const chartDataStudents = {\r\n    labels: courses.map((course) => course.courseName),\r\n    datasets: [\r\n      {\r\n        data: courses.map((course) => course.totalStudentsEnrolled),\r\n        backgroundColor: generateRandomColors(courses.length),\r\n      },\r\n    ],\r\n  }\r\n\r\n  // Data for the chart displaying income information\r\n  const chartIncomeData = {\r\n    labels: courses.map((course) => course.courseName),\r\n    datasets: [\r\n      {\r\n        data: courses.map((course) => course.totalAmountGenerated),\r\n        backgroundColor: generateRandomColors(courses.length),\r\n      },\r\n    ],\r\n  }\r\n\r\n  // Options for the chart\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-1 flex-col gap-y-4 rounded-md bg-richblack-800 p-6\">\r\n      <p className=\"text-lg font-bold text-richblack-5\">Visualize</p>\r\n      <div className=\"space-x-4 font-semibold\">\r\n        {/* Button to switch to the \"students\" chart */}\r\n        <button\r\n          onClick={() => setCurrChart(\"students\")}\r\n          className={`rounded-sm p-1 px-3 transition-all duration-200 ${\r\n            currChart === \"students\"\r\n              ? \"bg-richblack-700 text-richblack-50\"\r\n              : \"text-richblack-400\"\r\n          }`}\r\n        >\r\n          Students\r\n        </button>\r\n        {/* Button to switch to the \"income\" chart */}\r\n        <button\r\n          onClick={() => setCurrChart(\"income\")}\r\n          className={`rounded-sm p-1 px-3 transition-all duration-200 ${\r\n            currChart === \"income\"\r\n              ? \"bg-richblack-700 text-richblack-50\"\r\n              : \"text-richblack-400\"\r\n          }`}\r\n        >\r\n          Income\r\n        </button>\r\n      </div>\r\n      <div className=\"relative mx-auto aspect-square h-full w-full\">\r\n        {/* Render the Pie chart based on the selected chart */}\r\n        <Pie\r\n          data={currChart === \"students\" ? chartDataStudents : chartIncomeData}\r\n          options={options}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}