[{"/Users/lecher/Desktop/ByteBrighter/frontend/src/index.js":"1","/Users/lecher/Desktop/ByteBrighter/frontend/src/App.js":"2","/Users/lecher/Desktop/ByteBrighter/frontend/src/reducer/index.js":"3","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/UpdatePassword.js":"4","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/ForgotPassword.js":"5","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Dashboard.js":"6","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/VerifyEmail.js":"7","/Users/lecher/Desktop/ByteBrighter/frontend/src/utils/constants.js":"8","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Home.jsx":"9","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/About.jsx":"10","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Login.jsx":"11","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Signup.jsx":"12","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Contact.jsx":"13","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Catalog.jsx":"14","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Error.jsx":"15","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/CourseDetails.jsx":"16","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/ViewCourse.jsx":"17","/Users/lecher/Desktop/ByteBrighter/frontend/src/utils/Scroll_To_Top_Button.jsx":"18","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/profileAPI.js":"19","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/Navbar.jsx":"20","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/OpenRoute.jsx":"21","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/PrivateRoute.jsx":"22","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/MyProfile.jsx":"23","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/MyCourses.jsx":"24","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/EnrolledCourses.jsx":"25","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/ViewCourse/VideoDetails.jsx":"26","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/InstructorDashboard/Instructor.jsx":"27","/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/authSlice.js":"28","/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/cartSlice.js":"29","/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/profileSlice.js":"30","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/index.jsx":"31","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Cart/index.jsx":"32","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/EditCourse/index.jsx":"33","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/index.jsx":"34","/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/viewCourseSlice.jsx":"35","/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/courseSlice.jsx":"36","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/authAPI.js":"37","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/apis.js":"38","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/apiconnector.js":"39","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Sidebar.js":"40","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/formatDate.js":"41","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/studentFeaturesAPI.js":"42","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/ConfirmationModal.jsx":"43","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/pageAndComponentData.jsx":"44","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/RatingStars.jsx":"45","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/courseDetailsAPI.jsx":"46","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/Footer.jsx":"47","/Users/lecher/Desktop/ByteBrighter/frontend/src/utils/avgRating.jsx":"48","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/Template.jsx":"49","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/Button.jsx":"50","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/ContactPage/ContactForm.jsx":"51","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/ContactPage/ContactDetails.jsx":"52","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/HighlightText.jsx":"53","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/TimelineSection.jsx":"54","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/AboutPage/Quote.jsx":"55","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/AboutPage/LearningGrid.jsx":"56","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/AboutPage/StatsComponent.jsx":"57","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/AboutPage/ContactFormSection.jsx":"58","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Catalog/CourseSlider.jsx":"59","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Catalog/Course_Card.jsx":"60","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/InstructorSection.jsx":"61","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/CodeBlocks.jsx":"62","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Course/CourseDetailsCard.jsx":"63","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Course/CourseAccordianBar.jsx":"64","/Users/lecher/Desktop/ByteBrighter/frontend/src/hooks/useOnClickOutside.js":"65","/Users/lecher/Desktop/ByteBrighter/frontend/src/data/navbar-links.js":"66","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/LearningLanguageSection.jsx":"67","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/ExploreMore.jsx":"68","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/ViewCourse/CourseReviewModal.jsx":"69","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/ViewCourse/VideoDetailsSidebar.jsx":"70","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/ProfileDropDown.jsx":"71","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/IconBtn.jsx":"72","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/InstructorDashboard/InstructorChart.jsx":"73","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/InstructorCourses/CoursesTable.jsx":"74","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/ChangeProfilePicture.jsx":"75","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/EditProfile.jsx":"76","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/UpdatePassword.jsx":"77","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/DeleteAccount.jsx":"78","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Cart/RenderCartCourses.jsx":"79","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Cart/RenderTotalAmount.jsx":"80","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/RenderSteps.jsx":"81","/Users/lecher/Desktop/ByteBrighter/frontend/src/data/dashboard-links.js":"82","/Users/lecher/Desktop/ByteBrighter/frontend/src/data/homepage-explore.js":"83","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/ContactPage/ContactUsForm.jsx":"84","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/LoginForm.jsx":"85","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/SidebarLink.jsx":"86","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/SignupForm.jsx":"87","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Course/CourseSubSectionAccordian.jsx":"88","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/CourseCard.jsx":"89","/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/SettingsAPI.jsx":"90","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseInformation/CourseInformationForm.jsx":"91","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseBuilder/CourseBuilderForm.jsx":"92","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/PublishCourse/index.jsx":"93","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/Tab.js":"94","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/Upload.jsx":"95","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseBuilder/NestedView.jsx":"96","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseInformation/RequirementField.jsx":"97","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseInformation/ChipInput.jsx":"98","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseBuilder/SubSectionModal.jsx":"99"},{"size":632,"mtime":1705238616000,"results":"100","hashOfConfig":"101"},{"size":5188,"mtime":1721298847000,"results":"102","hashOfConfig":"101"},{"size":524,"mtime":1705327068000,"results":"103","hashOfConfig":"101"},{"size":4392,"mtime":1705235762000,"results":"104","hashOfConfig":"101"},{"size":2634,"mtime":1705234636000,"results":"105","hashOfConfig":"101"},{"size":870,"mtime":1705322296000,"results":"106","hashOfConfig":"101"},{"size":3501,"mtime":1705238212000,"results":"107","hashOfConfig":"101"},{"size":204,"mtime":1705233590000,"results":"108","hashOfConfig":"101"},{"size":8422,"mtime":1721466529315,"results":"109","hashOfConfig":"101"},{"size":6903,"mtime":1721393377000,"results":"110","hashOfConfig":"101"},{"size":401,"mtime":1705232774000,"results":"111","hashOfConfig":"101"},{"size":456,"mtime":1721314316000,"results":"112","hashOfConfig":"101"},{"size":1121,"mtime":1705295822000,"results":"113","hashOfConfig":"101"},{"size":5287,"mtime":1721372334000,"results":"114","hashOfConfig":"101"},{"size":219,"mtime":1705232660000,"results":"115","hashOfConfig":"101"},{"size":10045,"mtime":1705495612000,"results":"116","hashOfConfig":"101"},{"size":1867,"mtime":1705551392000,"results":"117","hashOfConfig":"101"},{"size":839,"mtime":1705396962000,"results":"118","hashOfConfig":"101"},{"size":2783,"mtime":1705322690000,"results":"119","hashOfConfig":"101"},{"size":8093,"mtime":1721316214000,"results":"120","hashOfConfig":"101"},{"size":382,"mtime":1698519282000,"results":"121","hashOfConfig":"101"},{"size":339,"mtime":1698519282000,"results":"122","hashOfConfig":"101"},{"size":4753,"mtime":1721196084000,"results":"123","hashOfConfig":"101"},{"size":1285,"mtime":1721198403000,"results":"124","hashOfConfig":"101"},{"size":3554,"mtime":1705323158000,"results":"125","hashOfConfig":"101"},{"size":9413,"mtime":1705556172000,"results":"126","hashOfConfig":"101"},{"size":6020,"mtime":1721204607000,"results":"127","hashOfConfig":"101"},{"size":849,"mtime":1720262715000,"results":"128","hashOfConfig":"101"},{"size":2434,"mtime":1705233390000,"results":"129","hashOfConfig":"101"},{"size":581,"mtime":1705308844000,"results":"130","hashOfConfig":"101"},{"size":650,"mtime":1698519282000,"results":"131","hashOfConfig":"101"},{"size":863,"mtime":1705323846000,"results":"132","hashOfConfig":"101"},{"size":1620,"mtime":1705396006000,"results":"133","hashOfConfig":"101"},{"size":1570,"mtime":1721199150000,"results":"134","hashOfConfig":"101"},{"size":1050,"mtime":1705325818000,"results":"135","hashOfConfig":"101"},{"size":891,"mtime":1705325908000,"results":"136","hashOfConfig":"101"},{"size":4742,"mtime":1698519282000,"results":"137","hashOfConfig":"101"},{"size":2740,"mtime":1705323234000,"results":"138","hashOfConfig":"101"},{"size":373,"mtime":1705078638000,"results":"139","hashOfConfig":"101"},{"size":3728,"mtime":1721196226000,"results":"140","hashOfConfig":"101"},{"size":511,"mtime":1705394926000,"results":"141","hashOfConfig":"101"},{"size":4074,"mtime":1721314339000,"results":"142","hashOfConfig":"101"},{"size":1036,"mtime":1705306430000,"results":"143","hashOfConfig":"101"},{"size":770,"mtime":1705416144000,"results":"144","hashOfConfig":"101"},{"size":1098,"mtime":1705396996000,"results":"145","hashOfConfig":"101"},{"size":11960,"mtime":1721207409000,"results":"146","hashOfConfig":"101"},{"size":2750,"mtime":1708443786000,"results":"147","hashOfConfig":"101"},{"size":404,"mtime":1705396908000,"results":"148","hashOfConfig":"101"},{"size":1807,"mtime":1721395571000,"results":"149","hashOfConfig":"101"},{"size":549,"mtime":1720162451000,"results":"150","hashOfConfig":"101"},{"size":616,"mtime":1715075734000,"results":"151","hashOfConfig":"101"},{"size":1538,"mtime":1721197213000,"results":"152","hashOfConfig":"101"},{"size":285,"mtime":1720171836000,"results":"153","hashOfConfig":"101"},{"size":2580,"mtime":1721393642000,"results":"154","hashOfConfig":"101"},{"size":833,"mtime":1705291494000,"results":"155","hashOfConfig":"101"},{"size":3131,"mtime":1721374219000,"results":"156","hashOfConfig":"101"},{"size":1095,"mtime":1705292098000,"results":"157","hashOfConfig":"101"},{"size":524,"mtime":1705293264000,"results":"158","hashOfConfig":"101"},{"size":1061,"mtime":1705422854000,"results":"159","hashOfConfig":"101"},{"size":1604,"mtime":1721196633000,"results":"160","hashOfConfig":"101"},{"size":1506,"mtime":1721374324000,"results":"161","hashOfConfig":"101"},{"size":2242,"mtime":1705581492000,"results":"162","hashOfConfig":"101"},{"size":4017,"mtime":1721375094000,"results":"163","hashOfConfig":"101"},{"size":2016,"mtime":1721196593000,"results":"164","hashOfConfig":"101"},{"size":1124,"mtime":1698519282000,"results":"165","hashOfConfig":"101"},{"size":236,"mtime":1721370100000,"results":"166","hashOfConfig":"101"},{"size":1855,"mtime":1705581618000,"results":"167","hashOfConfig":"101"},{"size":2666,"mtime":1705581564000,"results":"168","hashOfConfig":"101"},{"size":4233,"mtime":1705552022000,"results":"169","hashOfConfig":"101"},{"size":5813,"mtime":1705551218000,"results":"170","hashOfConfig":"101"},{"size":2118,"mtime":1705232922000,"results":"171","hashOfConfig":"101"},{"size":715,"mtime":1721198626000,"results":"172","hashOfConfig":"101"},{"size":2777,"mtime":1721196525000,"results":"173","hashOfConfig":"101"},{"size":6985,"mtime":1721205092000,"results":"174","hashOfConfig":"101"},{"size":3053,"mtime":1721196257000,"results":"175","hashOfConfig":"101"},{"size":8091,"mtime":1721196382000,"results":"176","hashOfConfig":"101"},{"size":4239,"mtime":1721196462000,"results":"177","hashOfConfig":"101"},{"size":1612,"mtime":1698519282000,"results":"178","hashOfConfig":"101"},{"size":2541,"mtime":1721196546000,"results":"179","hashOfConfig":"101"},{"size":1305,"mtime":1721196555000,"results":"180","hashOfConfig":"101"},{"size":2656,"mtime":1721370464000,"results":"181","hashOfConfig":"101"},{"size":872,"mtime":1698519282000,"results":"182","hashOfConfig":"101"},{"size":4743,"mtime":1698519282000,"results":"183","hashOfConfig":"101"},{"size":5639,"mtime":1721196665000,"results":"184","hashOfConfig":"101"},{"size":2849,"mtime":1720264515000,"results":"185","hashOfConfig":"101"},{"size":1125,"mtime":1721196146000,"results":"186","hashOfConfig":"101"},{"size":6829,"mtime":1720271849000,"results":"187","hashOfConfig":"101"},{"size":543,"mtime":1705495702000,"results":"188","hashOfConfig":"101"},{"size":1413,"mtime":1720161611000,"results":"189","hashOfConfig":"101"},{"size":3670,"mtime":1705322716000,"results":"190","hashOfConfig":"101"},{"size":10789,"mtime":1721392397000,"results":"191","hashOfConfig":"101"},{"size":5333,"mtime":1721196570000,"results":"192","hashOfConfig":"101"},{"size":3459,"mtime":1720161928000,"results":"193","hashOfConfig":"101"},{"size":745,"mtime":1705233900000,"results":"194","hashOfConfig":"101"},{"size":4091,"mtime":1705334708000,"results":"195","hashOfConfig":"101"},{"size":7079,"mtime":1721196576000,"results":"196","hashOfConfig":"101"},{"size":2613,"mtime":1705334648000,"results":"197","hashOfConfig":"101"},{"size":3648,"mtime":1721200242000,"results":"198","hashOfConfig":"101"},{"size":7427,"mtime":1720161866000,"results":"199","hashOfConfig":"101"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jzs7pp",{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359"},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403"},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407"},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423"},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439"},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472"},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479"},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486"},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500"},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511"},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524"},"/Users/lecher/Desktop/ByteBrighter/frontend/src/index.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/App.js",["525"],["526"],"import \"./App.css\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Navbar from \"./components/common/Navbar\";\nimport OpenRoute from \"./components/core/Auth/OpenRoute\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport UpdatePassword from \"./pages/UpdatePassword\";\nimport VerifyEmail from \"./pages/VerifyEmail\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Dashboard from \"./pages/Dashboard\";\nimport PrivateRoute from \"./components/core/Auth/PrivateRoute\";\nimport MyProfile from \"./components/core/Dashboard/MyProfile\";\nimport Settings from \"./components/core/Dashboard/Settings\";\nimport EnrolledCourses from \"./components/core/Dashboard/EnrolledCourses\";\nimport Cart from \"./components/core/Dashboard/Cart\";\nimport { ACCOUNT_TYPE } from \"./utils/constants\";\nimport Error from \"./pages/Error\";\nimport AddCourse from \"./components/core/Dashboard/AddCourse\";\nimport MyCourses from \"./components/core/Dashboard/MyCourses\";\nimport EditCourse from \"./components/core/Dashboard/EditCourse\";\nimport Catalog from \"./pages/Catalog\";\nimport CourseDetails from \"./pages/CourseDetails\";\nimport ViewCourse from \"./pages/ViewCourse\";\nimport { getUserDetails } from \"./services/operations/profileAPI\"\nimport VideoDetails from \"./components/core/ViewCourse/VideoDetails\";\nimport Scroll_To_Top_Button from \"./utils/Scroll_To_Top_Button\"\nimport Instructor from \"./components/core/Dashboard/InstructorDashboard/Instructor\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useSelector((state) => state.profile);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      const token = JSON.parse(localStorage.getItem(\"token\"))\n      dispatch(getUserDetails(token, navigate))\n    }\n    //*************************************** */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"w-screen min-h-screen bg-richblack-900 flex flex-col font-inter\">\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"catalog/:catalogName\" element={<Catalog />} />\n        <Route path=\"courses/:courseId\" element={<CourseDetails />} />\n\n        <Route\n          path=\"signup\"\n          element={\n            <OpenRoute>\n              <Signup />\n            </OpenRoute>\n          }\n        />\n        <Route\n          path=\"login\"\n          element={\n            <OpenRoute>\n              <Login />\n            </OpenRoute>\n          }\n        />\n        <Route\n          path=\"forgot-password\"\n          element={\n            <OpenRoute>\n              <ForgotPassword />\n            </OpenRoute>\n          }\n        />\n\n        <Route\n          path=\"update-password/:id\"\n          element={\n            <OpenRoute>\n              <UpdatePassword />\n            </OpenRoute>\n          }\n        />\n\n        <Route\n          path=\"verify-email\"\n          element={\n            <OpenRoute>\n              <VerifyEmail />\n            </OpenRoute>\n          }\n        />\n\n        <Route path=\"/about\" element={<About />} />\n\n        <Route path=\"/contact\" element={<Contact />} />\n\n        <Route\n          element={\n            <PrivateRoute> \n              <Dashboard />\n            </PrivateRoute>\n            // <OpenRoute>\n            //   <Dashboard />\n            // </OpenRoute>   ***********************************\n          }\n        >\n          <Route path=\"dashboard/my-profile\" element={<MyProfile />} />\n          <Route path=\"dashboard/Settings\" element={<Settings />} />\n\n          {user?.accountType === ACCOUNT_TYPE.STUDENT && (\n            <>\n              <Route path=\"dashboard/cart\" element={<Cart />} />\n              <Route path=\"dashboard/enrolled-courses\" element={<EnrolledCourses />}\n              />\n            </>\n          )}\n\n          {user?.accountType === ACCOUNT_TYPE.INSTRUCTOR && (\n            <>\n              <Route path=\"dashboard/instructor\" element={<Instructor />} />\n              <Route path=\"dashboard/add-course\" element={<AddCourse />} />\n              <Route path=\"dashboard/my-courses\" element={<MyCourses />} />\n              <Route path=\"dashboard/edit-course/:courseId\" element={<EditCourse />}\n              />\n            </>\n          )}\n        </Route>\n\n        <Route\n          element={\n            <PrivateRoute>  \n              <ViewCourse />\n            </PrivateRoute>\n            // <OpenRoute>\n            //   <ViewCourse /> \n            // </OpenRoute>***********************************\n          }\n        >\n          {user?.accountType === ACCOUNT_TYPE.STUDENT && (\n            <>\n              <Route\n                path=\"view-course/:courseId/section/:sectionId/sub-section/:subSectionId\"\n                element={<VideoDetails />}\n              />\n            </>\n          )}\n        </Route>\n\n        <Route path=\"*\" element={<Error />} />\n      </Routes>\n\n      <Scroll_To_Top_Button/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/reducer/index.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/UpdatePassword.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/ForgotPassword.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Dashboard.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/VerifyEmail.js",[],["527"],"/Users/lecher/Desktop/ByteBrighter/frontend/src/utils/constants.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Home.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/About.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Login.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Signup.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Contact.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Catalog.jsx",["528"],[],"import React, { useEffect, useState } from 'react'\r\nimport Footer from '../components/common/Footer'\r\nimport { useParams } from 'react-router-dom'\r\nimport { apiConnector } from '../services/apiconnector';\r\nimport { categories } from '../services/apis';\r\nimport { getCatalogaPageData } from '../services/operations/pageAndComponentData';\r\nimport Course_Card from '../components/core/Catalog/Course_Card';\r\nimport CourseSlider from '../components/core/Catalog/CourseSlider';\r\nimport { useSelector } from \"react-redux\"\r\nimport Error from \"./Error\"\r\n\r\nconst Catalog = () => {\r\n\r\n    const { loading } = useSelector((state) => state.profile)\r\n  const { catalogName } = useParams()\r\n  const [active, setActive] = useState(1)\r\n    const [catalogPageData, setCatalogPageData] = useState(null);\r\n    const [categoryId, setCategoryId] = useState(\"\");\r\n\r\n    //Fetch all categories\r\n    useEffect(()=> {\r\n        const getCategories = async() => {\r\n            const res = await apiConnector(\"GET\", categories.CATEGORIES_API);\r\n            const category_id = \r\n            res?.data?.data?.filter((ct) => ct.name.split(\" \").join(\"-\").toLowerCase() === catalogName)[0]._id;\r\n            setCategoryId(category_id);\r\n        }\r\n        getCategories();\r\n    },[catalogName]);\r\n\r\n    useEffect(() => {\r\n        const getCategoryDetails = async() => {\r\n            try{\r\n                const res = await getCatalogaPageData(categoryId);\r\n                console.log(\"PRinting res: \", res);\r\n                setCatalogPageData(res);\r\n            }\r\n            catch(error) {\r\n                console.log(error)\r\n            }\r\n        } \r\n        if(categoryId) {\r\n            getCategoryDetails();\r\n        }\r\n        \r\n    },[categoryId]);\r\n\r\n\r\n    if (loading || !catalogPageData) {\r\n        return (\r\n          <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n            <div className=\"spinner\"></div>\r\n          </div>\r\n        )\r\n      }\r\n      if (!loading && !catalogPageData.success) {\r\n        return <Error />\r\n      }\r\n    \r\n      return (\r\n        <>\r\n          {/* Hero Section */}\r\n          <div className=\" box-content bg-richblack-800 px-4\">\r\n            <div className=\"mx-auto flex min-h-[260px] max-w-maxContentTab flex-col justify-center gap-4 lg:max-w-maxContent \">\r\n              <p className=\"text-sm text-richblack-300\">\r\n                {`Home / Catalog / `}\r\n                <span className=\"text-richblack-25\">\r\n                  {catalogPageData?.data?.selectedCategory?.name}\r\n                </span>\r\n              </p>\r\n              <p className=\"text-3xl text-blue-5 font-semibold\">\r\n                {catalogPageData?.data?.selectedCategory?.name}\r\n              </p>\r\n              <p className=\"max-w-[870px] text-richblack-200\">\r\n                {catalogPageData?.data?.selectedCategory?.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n    \r\n          {/* Section 1 */}\r\n          <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\r\n            <div className=\"section_heading\">Courses to get you started</div>\r\n            <div className=\"my-4 flex border-b border-b-richblack-600 text-sm\">\r\n              <p\r\n                className={`px-4 py-2 ${\r\n                  active === 1\r\n                    ? \"border-b border-b-blue-100 text-blue-100\"\r\n                    : \"text-richblack-50\"\r\n                } cursor-pointer`}\r\n                onClick={() => setActive(1)}\r\n              >\r\n                Most Populer\r\n              </p>\r\n              <p\r\n                className={`px-4 py-2 ${\r\n                  active === 2\r\n                    ? \"border-b border-b-blue-100 text-blue-100\"\r\n                    : \"text-richblack-50\"\r\n                } cursor-pointer`}\r\n                onClick={() => setActive(2)}\r\n              >\r\n                New\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <CourseSlider\r\n                Courses={catalogPageData?.data?.selectedCategory?.courses}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Section 2 */}\r\n          <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\r\n            <div className=\"section_heading\">\r\n              Top courses in {catalogPageData?.data?.differentCategory?.name}\r\n            </div>\r\n            <div className=\"py-8\">\r\n              <CourseSlider\r\n                Courses={catalogPageData?.data?.differentCategory?.courses}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Section 3 */}\r\n          <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\r\n            <div className=\"section_heading\">Frequently Bought</div>\r\n            <div className=\"py-8\">\r\n              <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n                {catalogPageData?.data?.mostSellingCourses\r\n                  ?.slice(0, 4)\r\n                  .map((course, i) => (\r\n                    <Course_Card course={course} key={i} Height={\"h-[400px]\"} />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n          <Footer />\r\n        </>\r\n      )\r\n    }\r\n    \r\n    export default Catalog","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/Error.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/CourseDetails.jsx",["529"],[],"import React, { useEffect, useState } from \"react\"\r\nimport { BiInfoCircle } from \"react-icons/bi\"\r\nimport { HiOutlineGlobeAlt } from \"react-icons/hi\"\r\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\n\r\nimport ConfirmationModal from \"../components/common/ConfirmationModal\"\r\nimport Footer from \"../components/common/Footer\"\r\nimport RatingStars from \"../components/common/RatingStars\"\r\nimport CourseAccordionBar from \"../components/core/Course/CourseAccordianBar\"\r\nimport CourseDetailsCard from \"../components/core/Course/CourseDetailsCard\"\r\nimport { formatDate } from \"../services/formatDate\"\r\nimport { fetchCourseDetails } from \"../services/operations/courseDetailsAPI\"\r\nimport { buyCourse } from \"../services/operations/studentFeaturesAPI\"\r\nimport GetAvgRating from \"../utils/avgRating\"\r\nimport Error from \"./Error\"\r\n\r\nfunction CourseDetails() {\r\n  const { user } = useSelector((state) => state.profile)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { loading } = useSelector((state) => state.profile)\r\n  const { paymentLoading } = useSelector((state) => state.course)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  // Getting courseId from url parameter\r\n  const { courseId } = useParams()\r\n  // console.log(`course id: ${courseId}`)\r\n\r\n  // Declear a state to save the course details\r\n  const [response, setResponse] = useState(null)\r\n  const [confirmationModal, setConfirmationModal] = useState(null)\r\n  useEffect(() => {\r\n    // Calling fetchCourseDetails fucntion to fetch the details\r\n    ;(async () => {\r\n      try {\r\n        const res = await fetchCourseDetails(courseId)\r\n        // console.log(\"course details res: \", res)\r\n        setResponse(res)\r\n      } catch (error) {\r\n        console.log(\"Could not fetch Course Details\")\r\n      }\r\n    })()\r\n  }, [courseId])\r\n\r\n  // console.log(\"response: \", response)\r\n\r\n  // Calculating Avg Review count\r\n  const [avgReviewCount, setAvgReviewCount] = useState(0)\r\n  useEffect(() => {\r\n    const count = GetAvgRating(response?.data?.courseDetails.ratingAndReviews)\r\n    setAvgReviewCount(count)\r\n  }, [response])\r\n  // console.log(\"avgReviewCount: \", avgReviewCount)\r\n\r\n  // // Collapse all\r\n  // const [collapse, setCollapse] = useState(\"\")\r\n  const [isActive, setIsActive] = useState(Array(0))\r\n  const handleActive = (id) => {\r\n    // console.log(\"called\", id)\r\n    setIsActive(\r\n      !isActive.includes(id)\r\n        ? isActive.concat([id])\r\n        : isActive.filter((e) => e !== id)\r\n    )\r\n  }\r\n\r\n  // Total number of lectures\r\n  const [totalNoOfLectures, setTotalNoOfLectures] = useState(0)\r\n  useEffect(() => {\r\n    let lectures = 0\r\n    response?.data?.courseDetails?.courseContent?.forEach((sec) => {\r\n      lectures += sec.subSection.length || 0\r\n    })\r\n    setTotalNoOfLectures(lectures)\r\n  }, [response])\r\n\r\n  if (loading || !response) {\r\n    return (\r\n      <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    )\r\n  }\r\n  if (!response.success) {\r\n    return <Error />\r\n  }\r\n\r\n  const {\r\n    _id: course_id,\r\n    courseName,\r\n    courseDescription,\r\n    thumbnail,\r\n    price,\r\n    whatYouWillLearn,\r\n    courseContent,\r\n    ratingAndReviews,\r\n    instructor,\r\n    studentsEnrolled,\r\n    createdAt,\r\n  } = response.data?.courseDetails\r\n\r\n  const handleBuyCourse = () => {\r\n    if (token) {\r\n      buyCourse(token, [courseId], user, navigate, dispatch)\r\n      return\r\n    }\r\n    setConfirmationModal({\r\n      text1: \"You are not logged in!\",\r\n      text2: \"Please login to Purchase Course.\",\r\n      btn1Text: \"Login\",\r\n      btn2Text: \"Cancel\",\r\n      btn1Handler: () => navigate(\"/login\"),\r\n      btn2Handler: () => setConfirmationModal(null),\r\n    })\r\n  }\r\n\r\n  if (paymentLoading) {\r\n    // console.log(\"payment loading\")\r\n    return (\r\n      <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={`relative w-full bg-richblack-800`}>\r\n        {/* Hero Section */}\r\n        <div className=\"mx-auto box-content px-4 lg:w-[1260px] 2xl:relative \">\r\n          <div className=\"mx-auto grid min-h-[450px] max-w-maxContentTab justify-items-center py-8 lg:mx-0 lg:justify-items-start lg:py-0 xl:max-w-[810px]\">\r\n            <div className=\"relative block max-h-[30rem] lg:hidden\">\r\n              <div className=\"absolute bottom-0 left-0 h-full w-full shadow-[#161D29_0px_-64px_36px_-28px_inset]\"></div>\r\n              <img\r\n                src={thumbnail}\r\n                alt=\"course thumbnail\"\r\n                className=\"aspect-auto w-full\"\r\n              />\r\n            </div>\r\n            <div\r\n              className={`z-30 my-5 flex flex-col justify-center gap-4 py-5 text-lg text-richblack-5`}\r\n            >\r\n              <div>\r\n                <p className=\"text-4xl font-bold text-richblack-5 sm:text-[42px]\">\r\n                  {courseName}\r\n                </p>\r\n              </div>\r\n              <p className={`text-richblack-200`}>{courseDescription}</p>\r\n              <div className=\"text-md flex flex-wrap items-center gap-2\">\r\n                <span className=\"text-yellow-25\">{avgReviewCount}</span>\r\n                <RatingStars Review_Count={avgReviewCount} Star_Size={24} />\r\n                <span>{`(${ratingAndReviews.length} reviews)`}</span>\r\n                <span>{`${studentsEnrolled.length} students enrolled`}</span>\r\n              </div>\r\n              <div>\r\n                <p className=\"\">\r\n                  Created By {`${instructor.firstName} ${instructor.lastName}`}\r\n                </p>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-5 text-lg\">\r\n                <p className=\"flex items-center gap-2\">\r\n                  {\" \"}\r\n                  <BiInfoCircle /> Created at {formatDate(createdAt)}\r\n                </p>\r\n                <p className=\"flex items-center gap-2\">\r\n                  {\" \"}\r\n                  <HiOutlineGlobeAlt /> English\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex w-full flex-col gap-4 border-y border-y-richblack-500 py-4 lg:hidden\">\r\n              <p className=\"space-x-3 pb-4 text-3xl font-semibold text-richblack-5\">\r\n                Rs. {price}\r\n              </p>\r\n              <button className=\"yellowButton\" onClick={handleBuyCourse}>\r\n                Buy Now\r\n              </button>\r\n              <button className=\"blackButton\">Add to Cart</button>\r\n            </div>\r\n          </div>\r\n          {/* Courses Card */}\r\n          <div className=\"right-[1rem] top-[60px] mx-auto hidden min-h-[600px] w-1/3 max-w-[410px] translate-y-24 md:translate-y-0 lg:absolute  lg:block\">\r\n            <CourseDetailsCard\r\n              course={response?.data?.courseDetails}\r\n              setConfirmationModal={setConfirmationModal}\r\n              handleBuyCourse={handleBuyCourse}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mx-auto box-content px-4 text-start text-richblack-5 lg:w-[1260px]\">\r\n        <div className=\"mx-auto max-w-maxContentTab lg:mx-0 xl:max-w-[810px]\">\r\n          {/* What will you learn section */}\r\n          <div className=\"my-8 border border-richblack-600 p-8\">\r\n            <p className=\"text-3xl font-semibold\">What you'll learn</p>\r\n            <div className=\"mt-5\">\r\n              <ReactMarkdown>{whatYouWillLearn}</ReactMarkdown>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Course Content Section */}\r\n          <div className=\"max-w-[830px] \">\r\n            <div className=\"flex flex-col gap-3\">\r\n              <p className=\"text-[28px] font-semibold\">Course Content</p>\r\n              <div className=\"flex flex-wrap justify-between gap-2\">\r\n                <div className=\"flex gap-2\">\r\n                  <span>\r\n                    {courseContent.length} {`section(s)`}\r\n                  </span>\r\n                  <span>\r\n                    {totalNoOfLectures} {`lecture(s)`}\r\n                  </span>\r\n                  <span>{response.data?.totalDuration} total length</span>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"text-yellow-25\"\r\n                    onClick={() => setIsActive([])}\r\n                  >\r\n                    Collapse all sections\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Course Details Accordion */}\r\n            <div className=\"py-4\">\r\n              {courseContent?.map((course, index) => (\r\n                <CourseAccordionBar\r\n                  course={course}\r\n                  key={index}\r\n                  isActive={isActive}\r\n                  handleActive={handleActive}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            {/* Author Details */}\r\n            <div className=\"mb-12 py-4\">\r\n              <p className=\"text-[28px] font-semibold\">Author</p>\r\n              <div className=\"flex items-center gap-4 py-4\">\r\n                <img\r\n                  src={\r\n                    instructor.image\r\n                      ? instructor.image\r\n                      : `https://api.dicebear.com/5.x/initials/svg?seed=${instructor.firstName} ${instructor.lastName}`\r\n                  }\r\n                  alt=\"Author\"\r\n                  className=\"h-14 w-14 rounded-full object-cover\"\r\n                />\r\n                <p className=\"text-lg\">{`${instructor.firstName} ${instructor.lastName}`}</p>\r\n              </div>\r\n              <p className=\"text-richblack-50\">\r\n                {instructor?.additionalDetails?.about}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      {confirmationModal && <ConfirmationModal modalData={confirmationModal} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CourseDetails","/Users/lecher/Desktop/ByteBrighter/frontend/src/pages/ViewCourse.jsx",[],["530"],"/Users/lecher/Desktop/ByteBrighter/frontend/src/utils/Scroll_To_Top_Button.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/profileAPI.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/Navbar.jsx",["531"],[],"import { useEffect, useState, useRef } from \"react\"\r\nimport { AiOutlineMenu, AiOutlineShoppingCart } from \"react-icons/ai\"\r\nimport { BsChevronDown } from \"react-icons/bs\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link, matchPath, useLocation } from \"react-router-dom\"\r\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\"\r\n\r\n// import logo from \"../../assets/Logo/Logo-Full-Light.png\"\r\nimport { NavbarLinks } from \"../../data/navbar-links\"\r\nimport { apiConnector } from \"../../services/apiconnector\"\r\nimport { categories } from \"../../services/apis\"\r\nimport { ACCOUNT_TYPE } from \"../../utils/constants\"\r\nimport ProfileDropdown from \"../core/Auth/ProfileDropDown\"\r\n\r\n\r\nconst subLinks = [\r\n  {\r\n    title:\"python\",\r\n    link:\"/catalog/python\"\r\n  },\r\n  {\r\n    title:\"Web Development\",\r\n    link:\"/catalog/web-development\"\r\n  }\r\n]\r\n\r\nfunction Navbar() {\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { user } = useSelector((state) => state.profile)\r\n  const { totalItems } = useSelector((state) => state.cart)\r\n  const location = useLocation()\r\n\r\n  const ref = useRef(null)\r\n  const [subLinks, setSubLinks] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [open,setOpen] = useState(true);\r\n\r\n  useOnClickOutside(ref, () => setOpen(false))\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await apiConnector(\"GET\", categories.CATEGORIES_API)\r\n        setSubLinks(res.data.data)\r\n      } catch (error) {\r\n        console.log(\"Could not fetch Categories.\", error)\r\n      }\r\n      setLoading(false)\r\n    })()\r\n  }, [])\r\n\r\n  // console.log(\"sub links\", subLinks)\r\n\r\n  const matchRoute = (route) => {\r\n    return matchPath({ path: route }, location.pathname)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`flex h-14 items-center justify-center border-b-[1px] border-b-richblack-700 ${\r\n        location.pathname !== \"/\" ? \"bg-richblack-800\" : \"\"\r\n      } transition-all duration-200`}\r\n    >\r\n      <div className=\"flex w-[96%] md:w-11/12 max-w-maxContent items-center justify-between\">\r\n        {/* Logo */}\r\n        {/* <Link to=\"/\">\r\n          <img src={logo} alt=\"Logo\" width={120} height={32} loading=\"lazy\" className=\"rounded-xl p-2 border-2 border-white \" /> */}\r\n          {/* *********************** */}\r\n        {/* </Link> */}\r\n        <div className=\" font-sans\t text-[23px] text-blue-5 font-semibold flex justify-center items-center text-slate-400 leading-6 shadow-lg shadow-blue-100/40 \">ByteBrighter   </div>\r\n        {/* Navigation links */}\r\n\r\n        <nav className=\"\">\r\n          <ul className=\"flex md:gap-x-6 text-richblack-25\">\r\n            {NavbarLinks.map((link, index) => (\r\n              <li key={index}>\r\n                {link.title === \"Catalog\" ? (\r\n                  <>\r\n                    <div\r\n                      className={`group relative flex cursor-pointer items-center gap-1 ${\r\n                        matchRoute(\"/catalog/:catalogName\")\r\n                          ? \"text-blue-100\"\r\n                          : \"text-richblack-25\"\r\n                      }`}\r\n                    >\r\n                      <p>{link.title}</p>\r\n                      <BsChevronDown />\r\n                      <div className=\"invisible absolute left-[50%] top-[50%] z-[1000] flex w-[200px] translate-x-[-50%] translate-y-[3em] flex-col rounded-lg bg-richblack-5 p-4 text-richblack-900 opacity-0 transition-all duration-150 group-hover:visible group-hover:translate-y-[1.65em] group-hover:opacity-100 lg:w-[300px]\">\r\n                        <div className=\"absolute left-[50%] top-0 -z-10 h-6 w-6 translate-x-[80%] translate-y-[-40%] rotate-45 select-none rounded bg-richblack-5\"></div>\r\n                        {loading ? (\r\n                          <p className=\"text-center\">Loading...</p>\r\n                        ) : subLinks.length ? (\r\n                          <>\r\n                            {subLinks\r\n                              ?.filter(\r\n                                (subLink) => subLink?.courses?.length > 0\r\n                              )\r\n                              ?.map((subLink, i) => (\r\n                                <Link\r\n                                  to={`/catalog/${subLink.name\r\n                                    .split(\" \")\r\n                                    .join(\"-\")\r\n                                    .toLowerCase()}`}\r\n                                  className=\"rounded-lg bg-transparent py-4 pl-4 hover:bg-richblack-50\"\r\n                                  key={i}\r\n                                >\r\n                                  <p>{subLink.name}</p>\r\n                                </Link>\r\n                              ))}\r\n                          </>\r\n                        ) : (\r\n                          <p className=\"text-center\">No Courses Found</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <Link to={link?.path}>\r\n                    <p\r\n                      className={`${\r\n                        matchRoute(link?.path)\r\n                          ? \"text-blue-100 hidden md:block underline\"\r\n                          : \"text-richblack-25 hidden md:block \"\r\n                      }`}\r\n                    >\r\n                      {link.title}\r\n                    </p>\r\n                  </Link>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n     \r\n        {/* Login / Signup / Dashboard */}\r\n        <div className=\"items-center gap-x-2 flex\">\r\n          {user && user?.accountType !== ACCOUNT_TYPE.INSTRUCTOR && (\r\n            <Link to=\"/dashboard/cart\" className=\"relative\">\r\n              <AiOutlineShoppingCart className=\"text-2xl text-richblack-100\" />\r\n              {totalItems > 0 && (\r\n                <span className=\"absolute -bottom-2 -right-2 grid h-5 w-5 place-items-center overflow-hidden rounded-full bg-richblack-600 text-center text-xs font-bold text-blue-100\">\r\n                  {totalItems}\r\n                </span>\r\n              )}\r\n            </Link>\r\n          )}\r\n          {token === null && (\r\n            <Link to=\"/login\">\r\n              <button className=\"hidden md:block rounded-[8px] border border-richblack-700 bg-richblack-800 px-[12px] py-[8px] text-richblack-100\">\r\n                Log in\r\n              </button>\r\n            </Link>\r\n          )}\r\n          {token === null && (\r\n            <Link to=\"/signup\">\r\n              <button className=\"hidden md:block rounded-[8px] border border-richblack-700 bg-richblack-800 px-[12px] py-[8px] text-richblack-100\">\r\n                Sign up\r\n              </button>\r\n            </Link>\r\n          )}\r\n          {token !== null && <ProfileDropdown />}\r\n        </div>\r\n\r\n\r\n        <button className=\"relative mr-1 md:hidden\" onClick={() => setOpen(true)}>\r\n      <div className=\"flex items-center gap-x-1\">\r\n        <AiOutlineMenu fontSize={24} fill=\"#AFB2BF\" />\r\n      </div>\r\n      {open && (\r\n        <div\r\n          onClick={(e) => e.stopPropagation()}\r\n          className=\"absolute top-[118%] right-0 z-[1000] divide-y-[1px] divide-richblack-700 w-[120px] overflow-hidden rounded-md border-[1px] border-richblack-700 bg-richblack-800 \"\r\n          ref={ref}\r\n        >\r\n\r\n{NavbarLinks.map((link, index) => (\r\n              <li key={index} className=\"list-none\">\r\n                {link.title === \"Catalog\" ? (\r\n                  <>\r\n                  </>\r\n                ) : (\r\n                  <Link to={link?.path}>\r\n                    <p\r\n                      className={`${\r\n                        matchRoute(link?.path)\r\n                          ? \"text-blue-100 py-2\"\r\n                          : \"text-richblack-25 py-2\"\r\n                      }`}\r\n                    >\r\n                      {link.title}\r\n                    </p>\r\n                  </Link>\r\n                )}\r\n              </li>\r\n            ))}\r\n          \r\n        </div>\r\n      )}\r\n    </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/OpenRoute.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/PrivateRoute.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/MyProfile.jsx",["532"],[],"import { RiEditBoxLine } from \"react-icons/ri\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\"\r\n// import { formattedDate } from \"../../../utils/dateFormatter\"\r\n\r\nexport default function MyProfile() {\r\n  const { user } = useSelector((state) => state.profile)\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"mb-14 ml-16 md:ml-10 text-3xl font-medium text-richblack-5\">\r\n        My Profile\r\n      </h1>\r\n      <div className=\"flex md:flex-row flex-col items-center justify-between rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-8 px-12\">\r\n        <div className=\"flex md:flex-row flex-col items-center gap-x-4\">\r\n          <img\r\n            src={user?.image}\r\n            alt={`profile-${user?.firstName}`}\r\n            className=\"aspect-square  mx-auto md:m-0 w-[78px] rounded-full object-cover\"\r\n          />\r\n          <div className=\"space-y-1 mt-3 md:mt-0 text-center md:text-left\">\r\n            <p className=\"text-lg font-semibold text-richblack-5\">\r\n              {user?.firstName + \" \" + user?.lastName}\r\n            </p>\r\n            <p className=\"text-sm text-richblack-300\">{user?.email}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <Link to=\"/dashboard/settings\"\r\n        className=\"bg-richblack-50 mt-5 md:mt-0 px-3 py-1 flex items-center gap-1 rounded-md font-medium\">\r\n        <button>Edit</button>\r\n          <RiEditBoxLine />\r\n        </Link>\r\n        \r\n      </div>\r\n      <div className=\"my-10 flex flex-col gap-y-10 rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-8 px-12\">\r\n        <div className=\"flex w-full items-center justify-between\">\r\n          <p className=\"text-lg font-semibold text-richblack-5\">About</p>\r\n          <Link to=\"/dashboard/settings\"\r\n        className=\"bg-richblack-50 px-3 py-1 flex items-center gap-1 rounded-md font-medium\">\r\n        <button>Edit</button>\r\n          <RiEditBoxLine />\r\n        </Link>\r\n        </div>\r\n        <p\r\n          className={`${\r\n            user?.additionalDetails?.about\r\n              ? \"text-richblack-5\"\r\n              : \"text-richblack-400\"\r\n          } text-sm font-medium`}\r\n        >\r\n          {user?.additionalDetails?.about ?? \"Write Something About Yourself\"}\r\n        </p>\r\n      </div>\r\n      <div className=\"my-10 flex flex-col gap-y-10 rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-8 px-12\">\r\n        <div className=\"flex w-full items-center justify-between\">\r\n          <p className=\"text-lg font-semibold text-richblack-5\">\r\n            Personal Details\r\n          </p>\r\n          <Link to=\"/dashboard/settings\"\r\n        className=\"bg-richblack-50 px-3 py-1 flex items-center gap-1 rounded-md font-medium\">\r\n        <button>Edit</button>\r\n          <RiEditBoxLine />\r\n        </Link>\r\n        </div>\r\n        <div className=\"flex md:flex-row flex-col gap-y-5 md:gap-y-0 max-w-[500px] justify-between\">\r\n          <div className=\"flex flex-col gap-y-5\">\r\n            <div>\r\n              <p className=\"mb-2 text-sm text-richblack-600\">First Name</p>\r\n              <p className=\"text-sm font-medium text-richblack-5\">\r\n                {user?.firstName}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"mb-2 text-sm text-richblack-600\">Email</p>\r\n              <p className=\"text-sm font-medium text-richblack-5\">\r\n                {user?.email}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"mb-2 text-sm text-richblack-600\">Gender</p>\r\n              <p className=\"text-sm font-medium text-richblack-5\">\r\n                {user?.additionalDetails?.gender ?? \"Add Gender\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col gap-y-5\">\r\n            <div>\r\n              <p className=\"mb-2 text-sm text-richblack-600\">Last Name</p>\r\n              <p className=\"text-sm font-medium text-richblack-5\">\r\n                {user?.lastName}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"mb-2 text-sm text-richblack-600\">Phone Number</p>\r\n              <p className=\"text-sm font-medium text-richblack-5\">\r\n                {user?.additionalDetails?.contactNumber ?? \"Add Contact Number\"}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p className=\"mb-2 text-sm text-richblack-600\">Date Of Birth</p>\r\n              <p className=\"text-sm font-medium text-richblack-5\">\r\n                {/* {formattedDate(user?.additionalDetails?.dateOfBirth) ?? */}\r\n                  {/* \"Add Date Of Birth\"} */}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/MyCourses.jsx",[],["533"],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/EnrolledCourses.jsx",["534","535"],[],"import { useEffect, useState } from \"react\"\r\nimport ProgressBar from \"@ramonak/react-progress-bar\"\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { getUserEnrolledCourses } from \"../../../services/operations/profileAPI\"\r\n\r\nexport default function EnrolledCourses() {\r\n  const { token } = useSelector((state) => state.auth)\r\n  const navigate = useNavigate()\r\n\r\n  const [enrolledCourses, setEnrolledCourses] = useState(null)\r\n  const getEnrolledCourses = async () => {\r\n    try {\r\n      const res = await getUserEnrolledCourses(token);\r\n\r\n      setEnrolledCourses(res);\r\n    } catch (error) {\r\n      console.log(\"Could not fetch enrolled courses.\")\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getEnrolledCourses();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-3xl ml-12 md:ml-0 text-richblack-50\">Enrolled Courses</div>\r\n      {!enrolledCourses ? (\r\n        <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n          <div className=\"spinner\"></div>\r\n        </div>\r\n      ) : !enrolledCourses.length ? (\r\n        <p className=\"grid h-[10vh] w-full place-content-center text-richblack-5\">\r\n          You have not enrolled in any course yet.\r\n          {/* TODO: Modify this Empty State */}\r\n        </p>\r\n      ) : (\r\n        <div className=\"my-8 text-richblack-5\">\r\n          {/* Headings */}\r\n          <div className=\"flex rounded-t-lg bg-richblack-500\">\r\n            <p className=\"w-[45%] px-5 py-3\">Course Name</p>\r\n            <p className=\"w-1/4 px-2 py-3\">Duration</p>\r\n            <p className=\"flex-1 px-2 py-3\">Progress</p>\r\n          </div>\r\n          {/* Course Names */}\r\n          {enrolledCourses.map((course, i, arr) => (\r\n            <div\r\n              className={`flex items-center border border-richblack-700 ${\r\n                i === arr.length - 1 ? \"rounded-b-lg\" : \"rounded-none\"\r\n              }`}\r\n              key={i}\r\n            >\r\n              <div\r\n                className=\"flex md:flex-row flex-col w-[45%] cursor-pointer items-center gap-4 px-5 py-3\"\r\n                onClick={() => {\r\n                  navigate(\r\n                    `/view-course/${course?._id}/section/${course.courseContent?.[0]?._id}/sub-section/${course.courseContent?.[0]?.subSection?.[0]?._id}`\r\n                  )\r\n                }}\r\n              >\r\n                <img\r\n                  src={course.thumbnail}\r\n                  alt=\"course_img\"\r\n                  className=\"md:h-14 md:w-14 w-[120px] rounded-lg object-cover\"\r\n                />\r\n                <div className=\"flex max-w-xs flex-col gap-2\">\r\n                  <p className=\"font-semibold\">{course.courseName}</p>\r\n                  <p className=\"text-xs text-richblack-300\">\r\n                    {course.courseDescription.length > 50\r\n                      ? `${course.courseDescription.slice(0, 50)}...`\r\n                      : course.courseDescription}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-1/4 px-2 py-3\">{course?.totalDuration}</div>\r\n              <div className=\"flex w-1/5 flex-col gap-2 px-2 py-3\">\r\n                <p>Progress: {course.progressPercentage || 0}%</p>\r\n                <ProgressBar\r\n                  completed={course.progressPercentage || 0}\r\n                  height=\"8px\"\r\n                  isLabelVisible={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/ViewCourse/VideoDetails.jsx",["536","537"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport \"video-react/dist/video-react.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { BigPlayButton, Player } from \"video-react\";\r\n\r\nimport { markLectureAsComplete } from \"../../../services/operations/courseDetailsAPI\";\r\nimport { updateCompletedLectures } from \"../../../slices/viewCourseSlice\";\r\nimport IconBtn from \"../../common/IconBtn\";\r\n\r\nconst VideoDetails = () => {\r\n  const { courseId, sectionId, subSectionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const playerRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { courseSectionData, courseEntireData, completedLectures } =\r\n    useSelector((state) => state.viewCourse);\r\n\r\n  const [videoData, setVideoData] = useState([]);\r\n  const [previewSource, setPreviewSource] = useState(\"\");\r\n  const [videoEnded, setVideoEnded] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!courseSectionData.length) return;\r\n      if (!courseId && !sectionId && !subSectionId) {\r\n        navigate(`/dashboard/enrolled-courses`);\r\n      } else {\r\n        // console.log(\"courseSectionData\", courseSectionData)\r\n        const filteredData = courseSectionData.filter(\r\n          (course) => course._id === sectionId\r\n        );\r\n        // console.log(\"filteredData\", filteredData)\r\n        const filteredVideoData = filteredData?.[0]?.subSection.filter(\r\n          (data) => data._id === subSectionId\r\n        );\r\n        // console.log(\"filteredVideoData\", filteredVideoData)\r\n        setVideoData(filteredVideoData[0]);\r\n        setPreviewSource(courseEntireData.thumbnail);\r\n        setVideoEnded(false);\r\n      }\r\n    })();\r\n  }, [courseSectionData, courseEntireData, location.pathname]);\r\n\r\n  // check if the lecture is the first video of the course\r\n  const isFirstVideo = () => {\r\n    const currentSectionIndx = courseSectionData.findIndex(\r\n      (data) => data._id === sectionId\r\n    );\r\n\r\n    const currentSubSectionIndx = courseSectionData[\r\n      currentSectionIndx\r\n    ].subSection.findIndex((data) => data._id === subSectionId);\r\n\r\n    if (currentSectionIndx === 0 && currentSubSectionIndx === 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // go to the next video\r\n  const goToNextVideo = () => {\r\n    // console.log(courseSectionData)\r\n\r\n    const currentSectionIndx = courseSectionData.findIndex(\r\n      (data) => data._id === sectionId\r\n    );\r\n\r\n    const noOfSubsections =\r\n      courseSectionData[currentSectionIndx].subSection.length;\r\n\r\n    const currentSubSectionIndx = courseSectionData[\r\n      currentSectionIndx\r\n    ].subSection.findIndex((data) => data._id === subSectionId);\r\n\r\n    // console.log(\"no of subsections\", noOfSubsections)\r\n\r\n    if (currentSubSectionIndx !== noOfSubsections - 1) {\r\n      const nextSubSectionId =\r\n        courseSectionData[currentSectionIndx].subSection[\r\n          currentSubSectionIndx + 1\r\n        ]._id;\r\n      navigate(\r\n        `/view-course/${courseId}/section/${sectionId}/sub-section/${nextSubSectionId}`\r\n      );\r\n    } else {\r\n      const nextSectionId = courseSectionData[currentSectionIndx + 1]._id;\r\n      const nextSubSectionId =\r\n        courseSectionData[currentSectionIndx + 1].subSection[0]._id;\r\n      navigate(\r\n        `/view-course/${courseId}/section/${nextSectionId}/sub-section/${nextSubSectionId}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // check if the lecture is the last video of the course\r\n  const isLastVideo = () => {\r\n    const currentSectionIndx = courseSectionData.findIndex(\r\n      (data) => data._id === sectionId\r\n    );\r\n\r\n    const noOfSubsections =\r\n      courseSectionData[currentSectionIndx].subSection.length;\r\n\r\n    const currentSubSectionIndx = courseSectionData[\r\n      currentSectionIndx\r\n    ].subSection.findIndex((data) => data._id === subSectionId);\r\n\r\n    if (\r\n      currentSectionIndx === courseSectionData.length - 1 &&\r\n      currentSubSectionIndx === noOfSubsections - 1\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // go to the previous video\r\n  const goToPrevVideo = () => {\r\n    // console.log(courseSectionData)\r\n\r\n    const currentSectionIndx = courseSectionData.findIndex(\r\n      (data) => data._id === sectionId\r\n    );\r\n\r\n    const currentSubSectionIndx = courseSectionData[\r\n      currentSectionIndx\r\n    ].subSection.findIndex((data) => data._id === subSectionId);\r\n\r\n    if (currentSubSectionIndx !== 0) {\r\n      const prevSubSectionId =\r\n        courseSectionData[currentSectionIndx].subSection[\r\n          currentSubSectionIndx - 1\r\n        ]._id;\r\n      navigate(\r\n        `/view-course/${courseId}/section/${sectionId}/sub-section/${prevSubSectionId}`\r\n      );\r\n    } else {\r\n      const prevSectionId = courseSectionData[currentSectionIndx - 1]._id;\r\n      const prevSubSectionLength =\r\n        courseSectionData[currentSectionIndx - 1].subSection.length;\r\n      const prevSubSectionId =\r\n        courseSectionData[currentSectionIndx - 1].subSection[\r\n          prevSubSectionLength - 1\r\n        ]._id;\r\n      navigate(\r\n        `/view-course/${courseId}/section/${prevSectionId}/sub-section/${prevSubSectionId}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleLectureCompletion = async () => {\r\n    setLoading(true);\r\n    const res = await markLectureAsComplete(\r\n      { courseId: courseId, subsectionId: subSectionId },\r\n      token\r\n    );\r\n    if (res) {\r\n      dispatch(updateCompletedLectures(subSectionId));\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-5 text-white\">\r\n      {!videoData ? (\r\n        <img\r\n          src={previewSource}\r\n          alt=\"Preview\"\r\n          className=\"h-full w-full rounded-md object-cover\"\r\n        />\r\n      ) : (\r\n        <Player\r\n          ref={playerRef}\r\n          aspectRatio=\"16:9\"\r\n          playsInline\r\n          onEnded={() => setVideoEnded(true)}\r\n          src={videoData?.videoUrl}\r\n        >\r\n          <BigPlayButton position=\"center\" />\r\n          {/* Render When Video Ends */}\r\n          {videoEnded && (\r\n            <div\r\n              style={{\r\n                backgroundImage:\r\n                  \"linear-gradient(to top, rgb(0, 0, 0), rgba(0,0,0,0.7), rgba(0,0,0,0.5), rgba(0,0,0,0.1)\",\r\n              }}\r\n              className=\"full absolute inset-0 z-[100] grid h-full place-content-center font-inter\"\r\n            >\r\n              {/* {!completedLectures.includes(subSectionId) && (\r\n                <IconBtn\r\n                  disabled={loading}\r\n                  onclick={() => handleLectureCompletion()}\r\n                  text={!loading ? \"Mark As Completed\" : \"Loading...\"}\r\n                  customClasses=\"text-xl max-w-max px-4 mx-auto\"\r\n                />\r\n              )} */}\r\n\r\n              {!completedLectures.includes(subSectionId) && (\r\n                <button\r\n                  className=\"mx-auto bg-yellow-100 text-richblack-900 px-3 py-2 rounded-md text-xl mb-6\"\r\n                  onClick={() => handleLectureCompletion()}\r\n                >\r\n                  {!loading ? \"Mark As Completed\" : \"Loading...\"}\r\n                </button>\r\n              )}\r\n\r\n              {/* <IconBtn\r\n                disabled={loading}\r\n                onclick={() => {\r\n                  if (playerRef?.current) {\r\n                    // set the current time of the video to 0\r\n                    playerRef?.current?.seek(0)\r\n                    setVideoEnded(false)\r\n                  }\r\n                }}\r\n                text=\"Rewatch\"\r\n                customClasses=\"text-xl max-w-max px-4 mx-auto mt-2\"\r\n              /> */}\r\n              <button\r\n                onClick={() => {\r\n                  if (playerRef?.current) {\r\n                    // set the current time of the video to 0\r\n                    playerRef?.current?.seek(0);\r\n                    setVideoEnded(false);\r\n                  }\r\n                }}\r\n                className=\"text-xl rounded-md text-richblack-900 mx-auto w-fit px-3 py-2 bg-yellow-100\"\r\n              >\r\n                Rewatch\r\n              </button>\r\n              <div className=\"mt-10 flex min-w-[250px] justify-center gap-x-4 text-xl\">\r\n                {!isFirstVideo() && (\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={goToPrevVideo}\r\n                    className=\"blackButton bg-yellow-100 px-2 py-0 rounded-md text-richblack-900\"\r\n                  >\r\n                    Prev\r\n                  </button>\r\n                )}\r\n                {!isLastVideo() && (\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={goToNextVideo}\r\n                    className=\"blackButton bg-yellow-100 px-3 py-2 rounded-md text-richblack-900\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Player>\r\n      )}\r\n\r\n      {/* <h1 className=\"mt-4 text-3xl font-semibold\">{videoData?.title}</h1>\r\n      <p className=\"pt-2 pb-6\">{videoData?.description}</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetails;\r\n// video\r\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/InstructorDashboard/Instructor.jsx",["538"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { fetchInstructorCourses } from '../../../../services/operations/courseDetailsAPI';\r\nimport { getInstructorData } from '../../../../services/operations/profileAPI';\r\nimport InstructorChart from './InstructorChart';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Instructor() {\r\n    const { token } = useSelector((state) => state.auth)\r\n    const { user } = useSelector((state) => state.profile)\r\n    const [loading, setLoading] = useState(false)\r\n    const [instructorData, setInstructorData] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n  \r\n    useEffect(() => {\r\n      ;(async () => {\r\n        setLoading(true)\r\n        const instructorApiData = await getInstructorData(token)\r\n        const result = await fetchInstructorCourses(token)\r\n        console.log(instructorApiData)\r\n        if (instructorApiData.length) setInstructorData(instructorApiData)\r\n        if (result) {\r\n          setCourses(result)\r\n        }\r\n        setLoading(false)\r\n      })()\r\n    }, [])\r\n  \r\n    const totalAmount = instructorData?.reduce(\r\n      (acc, curr) => acc + curr.totalAmountGenerated,\r\n      0\r\n    )\r\n  \r\n    const totalStudents = instructorData?.reduce(\r\n      (acc, curr) => acc + curr.totalStudentsEnrolled,\r\n      0\r\n    )\r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"space-y-2 mt-12\">\r\n          <div className='flex flex-row gap-1.5'><h1 className=\"text-2xl font-bold text-blue-5\">\r\n            Hi \r\n          </h1>\r\n          <h1 className=\"text-blue-100 text-2xl font-bold\">{user?.firstName} 👋</h1>\r\n          </div>\r\n          \r\n          <p className=\"font-medium text-richblack-200\">\r\n            Let's start something new\r\n          </p>\r\n        </div>\r\n        {loading ? (\r\n          <div className=\"spinner\"></div>\r\n        ) : courses.length > 0 ? (\r\n          <div>\r\n            <div className=\"my-4 flex md:flex-row flex-col h-[600px] md:h-[450px] md:space-x-4 \">\r\n              {/* Render chart / graph */}\r\n              {totalAmount > 0 || totalStudents > 0 ? (\r\n                <InstructorChart courses={instructorData} />\r\n              ) : (\r\n                <div className=\"flex-1 rounded-md bg-richblack-800 p-6\">\r\n                  <p className=\"text-lg font-bold text-blue-100\">Visualize</p>\r\n                  <p className=\"mt-4 text-xl font-medium text-blue-50\">\r\n                    Not Enough Data To Visualize\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {/* Total Statistics */}\r\n              <div className=\"flex md:mt-0 mx-auto mt-6 min-w-[300px] flex-col rounded-md bg-richblack-800 p-6\">\r\n                <p className=\"text-lg font-bold text-blue-5\">Statistics</p>\r\n                <div className=\"mt-4 space-y-4\">\r\n                  <div>\r\n                    <p className=\"text-lg text-blue-200\">Total Courses</p>\r\n                    <p className=\"text-3xl font-semibold text-blue-50\">\r\n                      {courses.length}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-lg text-blue-200\">Total Students</p>\r\n                    <p className=\"text-3xl font-semibold text-blue-50\">\r\n                      {totalStudents}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-lg text-blue-200\">Total Income</p>\r\n                    <p className=\"text-3xl font-semibold text-blue-50\">\r\n                      Rs. {totalAmount}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"rounded-md bg-richblack-800 md:mt-0 mt-[200px] p-6\">\r\n              {/* Render 3 courses */}\r\n              <div className=\"flex items-center justify-between\">\r\n                <p className=\"text-lg font-bold text-blue-5\">Your Courses</p>\r\n                <Link to=\"/dashboard/my-courses\">\r\n                  <p className=\"text-xs font-semibold text-blue-50\">View All</p>\r\n                </Link>\r\n              </div>\r\n              <div className=\"my-4 flex md:flex-row flex-col w-full items-start md:space-x-6 space-y-5 md:space-y-0\">\r\n                {courses.slice(0, 3).map((course) => (\r\n                  <div key={course._id} className=\"md:w-1/3 w-full\">\r\n                    <img\r\n                      src={course.thumbnail}\r\n                      alt={course.courseName}\r\n                      className=\"h-[201px] w-[100%] md:w-full rounded-md object-cover\"\r\n                    />\r\n                    <div className=\"mt-3 w-full\">\r\n                      <p className=\"text-sm font-medium text-richblack-50\">\r\n                        {course.courseName}\r\n                      </p>\r\n                      <div className=\"mt-1 flex items-center space-x-2\">\r\n                        <p className=\"text-xs font-medium text-blue-300\">\r\n                          {course.studentsEnrolled.length} students\r\n                        </p>\r\n                        <p className=\"text-xs font-medium text-blue-300\">\r\n                          |\r\n                        </p>\r\n                        <p className=\"text-xs font-medium text-blue-50\">\r\n                          Rs. {course.price}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"mt-20 rounded-md bg-richblack-800 p-6 py-20\">\r\n            <p className=\"text-center text-2xl font-bold text-blue-5\">\r\n              You have not created any courses yet\r\n            </p>\r\n            <Link to=\"/dashboard/add-course\">\r\n              <p className=\"mt-1 text-center text-lg font-semibold text-blue-50\">\r\n                Create a course\r\n              </p>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }","/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/authSlice.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/cartSlice.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/profileSlice.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/index.jsx",["539"],[],"import ChangeProfilePicture from \"./ChangeProfilePicture\"\nimport EditProfile from \"./EditProfile\"\nimport DeleteAccount from \"./DeleteAccount\"\nimport UpdatePassword from \"./UpdatePassword\"\n\nexport default function Settings() {\n    return (\n        <div>\n            <h1 className=\"mb-14 text-3xl font-medium text-richblack-5 ml-16 md:ml-0\">Edit Profile</h1>\n            {/* change profile picture */}\n            <ChangeProfilePicture/>\n            {/* edit profile */}\n            <EditProfile/>\n            {/* password */}\n            {/* <UpdatePassword/> */}\n            {/* delete account */}\n            <DeleteAccount/>\n        </div>\n    )\n}\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Cart/index.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/EditCourse/index.jsx",["540"],["541"],"import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport {\r\n  fetchCourseDetails,\r\n  getFullDetailsOfCourse,\r\n} from \"../../../../services/operations/courseDetailsAPI\"\r\nimport { setCourse, setEditCourse } from \"../../../../slices/courseSlice\"\r\nimport RenderSteps from \"../AddCourse/RenderSteps\"\r\n\r\nexport default function EditCourse() {\r\n  const dispatch = useDispatch()\r\n  const { courseId } = useParams()\r\n  const { course } = useSelector((state) => state.course)\r\n  const [loading, setLoading] = useState(false)\r\n  const { token } = useSelector((state) => state.auth)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      setLoading(true)\r\n      const result = await getFullDetailsOfCourse(courseId, token)\r\n      if (result?.courseDetails) {\r\n        dispatch(setEditCourse(true))\r\n        dispatch(setCourse(result?.courseDetails))\r\n      }\r\n      setLoading(false)\r\n    })()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"grid flex-1 place-items-center\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mb-14 text-3xl font-medium text-richblack-5\">\r\n        Edit Course\r\n      </h1>\r\n      <div className=\"mx-auto max-w-[600px]\">\r\n        {course ? (\r\n          <RenderSteps />\r\n        ) : (\r\n          <p className=\"mt-14 text-center text-3xl font-semibold text-richblack-100\">\r\n            Course not found\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/index.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/viewCourseSlice.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/slices/courseSlice.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/authAPI.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/apis.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/apiconnector.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Sidebar.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/formatDate.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/studentFeaturesAPI.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/ConfirmationModal.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/pageAndComponentData.jsx",["542"],[],"import React from 'react'\r\nimport {toast} from \"react-hot-toast\"\r\nimport { apiConnector } from '../apiconnector';\r\nimport { catalogData } from '../apis';\r\n\r\nexport const getCatalogaPageData = async(categoryId) => {\r\n  const toastId = toast.loading(\"Loading...\");\r\n  let result = [];\r\n  try{\r\n        const response = await apiConnector(\"POST\", catalogData.CATALOGPAGEDATA_API, \r\n        {categoryId: categoryId,});\r\n\r\n        if(!response?.data?.success)\r\n            throw new Error(\"Could not Fetch Category page data\");\r\n\r\n         result = response?.data;\r\n\r\n  }\r\n  catch(error) {\r\n    console.log(\"CATALOG PAGE DATA API ERROR....\", error);\r\n    toast.error(error.message);\r\n    result = error.response?.data;\r\n  }\r\n  toast.dismiss(toastId);\r\n  return result;\r\n}\r\n\r\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/RatingStars.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/courseDetailsAPI.jsx",["543"],[],"import { toast } from \"react-hot-toast\"\r\n\r\nimport { updateCompletedLectures } from \"../../slices/viewCourseSlice\"\r\n// import { setLoading } from \"../../slices/profileSlice\";\r\nimport { apiConnector } from \"../apiconnector\"\r\nimport { courseEndpoints } from \"../apis\"\r\n\r\nconst {\r\n  COURSE_DETAILS_API,\r\n  COURSE_CATEGORIES_API,\r\n  GET_ALL_COURSE_API,\r\n  CREATE_COURSE_API,\r\n  EDIT_COURSE_API,\r\n  CREATE_SECTION_API,\r\n  CREATE_SUBSECTION_API,\r\n  UPDATE_SECTION_API,\r\n  UPDATE_SUBSECTION_API,\r\n  DELETE_SECTION_API,\r\n  DELETE_SUBSECTION_API,\r\n  GET_ALL_INSTRUCTOR_COURSES_API,\r\n  DELETE_COURSE_API,\r\n  GET_FULL_COURSE_DETAILS_AUTHENTICATED,\r\n  CREATE_RATING_API,\r\n  LECTURE_COMPLETION_API,\r\n} = courseEndpoints\r\n\r\nexport const getAllCourses = async () => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  let result = []\r\n  try {\r\n    const response = await apiConnector(\"GET\", GET_ALL_COURSE_API)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Fetch Course Categories\")\r\n    }\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"GET_ALL_COURSE_API API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\nexport const fetchCourseDetails = async (courseId) => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  //   dispatch(setLoading(true));\r\n  let result = null\r\n  try {\r\n    const response = await apiConnector(\"POST\", COURSE_DETAILS_API, {\r\n      courseId,\r\n    })\r\n    console.log(\"COURSE_DETAILS_API API RESPONSE............\", response)\r\n\r\n    if (!response.data.success) {\r\n      throw new Error(response.data.message)\r\n    }\r\n    result = response.data\r\n  } catch (error) {\r\n    console.log(\"COURSE_DETAILS_API API ERROR............\", error)\r\n    result = error.response.data\r\n    // toast.error(error.response.data.message);\r\n  }\r\n  toast.dismiss(toastId)\r\n  //   dispatch(setLoading(false));\r\n  return result\r\n}\r\n\r\n// fetching the available course categories\r\nexport const fetchCourseCategories = async () => {\r\n  let result = []\r\n  try {\r\n    const response = await apiConnector(\"GET\", COURSE_CATEGORIES_API)\r\n    console.log(\"COURSE_CATEGORIES_API API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Fetch Course Categories\")\r\n    }\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"COURSE_CATEGORY_API API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  return result\r\n}\r\n\r\n// add the course details\r\nexport const addCourseDetails = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", CREATE_COURSE_API, data, {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"CREATE COURSE API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Add Course Details\")\r\n    }\r\n    toast.success(\"Course Details Added Successfully\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"CREATE COURSE API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// edit the course details\r\nexport const editCourseDetails = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", EDIT_COURSE_API, data, {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"EDIT COURSE API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Update Course Details\")\r\n    }\r\n    toast.success(\"Course Details Updated Successfully\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"EDIT COURSE API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// create a section\r\nexport const createSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", CREATE_SECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"CREATE SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Create Section\")\r\n    }\r\n    toast.success(\"Course Section Created\")\r\n    result = response?.data?.updatedCourse\r\n  } catch (error) {\r\n    console.log(\"CREATE SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// create a subsection\r\nexport const createSubSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", CREATE_SUBSECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"CREATE SUB-SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Add Lecture\")\r\n    }\r\n    toast.success(\"Lecture Added\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"CREATE SUB-SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// update a section\r\nexport const updateSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", UPDATE_SECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"UPDATE SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Update Section\")\r\n    }\r\n    toast.success(\"Course Section Updated\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"UPDATE SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// update a subsection\r\nexport const updateSubSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", UPDATE_SUBSECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"UPDATE SUB-SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Update Lecture\")\r\n    }\r\n    toast.success(\"Lecture Updated\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"UPDATE SUB-SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// delete a section\r\nexport const deleteSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", DELETE_SECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"DELETE SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Delete Section\")\r\n    }\r\n    toast.success(\"Course Section Deleted\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"DELETE SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n// delete a subsection\r\nexport const deleteSubSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", DELETE_SUBSECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"DELETE SUB-SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Delete Lecture\")\r\n    }\r\n    toast.success(\"Lecture Deleted\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"DELETE SUB-SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// fetching all courses under a specific instructor\r\nexport const fetchInstructorCourses = async (token) => {\r\n  let result = []\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\r\n      \"GET\",\r\n      GET_ALL_INSTRUCTOR_COURSES_API,\r\n      null,\r\n      {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    )\r\n    console.log(\"INSTRUCTOR COURSES API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Fetch Instructor Courses\")\r\n    }\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"INSTRUCTOR COURSES API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// delete a course\r\nexport const deleteCourse = async (data, token) => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"DELETE\", DELETE_COURSE_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"DELETE COURSE API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Delete Course\")\r\n    }\r\n    toast.success(\"Course Deleted\")\r\n  } catch (error) {\r\n    console.log(\"DELETE COURSE API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n}\r\n\r\n// get full details of a course\r\nexport const getFullDetailsOfCourse = async (courseId, token) => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  //   dispatch(setLoading(true));\r\n  let result = null\r\n  try {\r\n    const response = await apiConnector(\r\n      \"POST\",\r\n      GET_FULL_COURSE_DETAILS_AUTHENTICATED,\r\n      {\r\n        courseId,\r\n      },\r\n      {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    )\r\n    console.log(\"COURSE_FULL_DETAILS_API API RESPONSE............\", response)\r\n\r\n    if (!response.data.success) {\r\n      throw new Error(response.data.message)\r\n    }\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"COURSE_FULL_DETAILS_API API ERROR............\", error)\r\n    result = error.response.data\r\n    // toast.error(error.response.data.message);\r\n  }\r\n  toast.dismiss(toastId)\r\n  //   dispatch(setLoading(false));\r\n  return result\r\n}\r\n\r\n// mark a lecture as complete\r\nexport const markLectureAsComplete = async (data, token) => {\r\n  let result = null\r\n  console.log(\"mark complete data\", data)\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", LECTURE_COMPLETION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\r\n      \"MARK_LECTURE_AS_COMPLETE_API API RESPONSE............\",\r\n      response\r\n    )\r\n\r\n    if (!response.data.message) {\r\n      throw new Error(response.data.error)\r\n    }\r\n    toast.success(\"Lecture Completed\")\r\n    result = true\r\n  } catch (error) {\r\n    console.log(\"MARK_LECTURE_AS_COMPLETE_API API ERROR............\", error)\r\n    toast.error(error.message)\r\n    result = false\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// create a rating for course\r\nexport const createRating = async (data, token) => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  let success = false\r\n  try {\r\n    const response = await apiConnector(\"POST\", CREATE_RATING_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"CREATE RATING API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Create Rating\")\r\n    }\r\n    toast.success(\"Rating Created\")\r\n    success = true\r\n  } catch (error) {\r\n    success = false\r\n    console.log(\"CREATE RATING API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return success\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/Footer.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/utils/avgRating.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/Template.jsx",["544"],[],"import { FcGoogle } from \"react-icons/fc\"\nimport { useSelector } from \"react-redux\"\n\nimport frameImg from \"../../../assets/Images/frame.png\"\nimport LoginForm from \"./LoginForm\"\nimport SignupForm from \"./SignupForm\"\n\nfunction Template({ title, description1, description2, image, formType }) {\n  const { loading } = useSelector((state) => state.auth)\n\n  return (\n    <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\n      {loading ? (\n        <div className=\"spinner\"></div>\n      ) : (\n        <div className=\"mx-auto flex w-11/12 max-w-maxContent flex-col-reverse justify-between gap-y-12 py-12 md:flex-row md:gap-y-0 md:gap-x-12\">\n          <div className=\"mx-auto w-11/12 max-w-[450px] md:mx-0\">\n            <h1 className=\"text-[1.875rem] font-semibold leading-[2.375rem] text-richblack-5\">\n              {title}\n            </h1>\n            <p className=\"mt-4 text-[1.125rem] leading-[1.625rem]\">\n              <span className=\"text-richblack-100\">{description1}</span>{\" \"}\n              <span className=\"font-edu-sa font-bold italic text-blue-100\">\n                {description2}\n              </span>\n            </p>\n            {formType === \"signup\" ? <SignupForm /> : <LoginForm />}\n          </div>\n          <div className=\"relative mx-auto w-11/12 max-w-[450px] md:mx-0\">\n            <img\n              src={frameImg}\n              alt=\"Pattern\"\n              width={558}\n              height={504}\n              loading=\"lazy rounded-2xl\"\n            />\n            <img\n              src={image}\n              alt=\"Students\"\n              width={558}\n              height={504}\n              loading=\"lazy\"\n              className=\"absolute -top-4 right-4 z-10 rounded-2xl\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Template","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/Button.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/ContactPage/ContactForm.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/ContactPage/ContactDetails.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/HighlightText.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/TimelineSection.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/AboutPage/Quote.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/AboutPage/LearningGrid.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/AboutPage/StatsComponent.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/AboutPage/ContactFormSection.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Catalog/CourseSlider.jsx",["545","546","547"],[],"import React from 'react'\r\n\r\nimport {Swiper, SwiperSlide} from \"swiper/react\"\r\nimport \"swiper/css\"\r\nimport \"swiper/css/free-mode\"\r\nimport \"swiper/css/pagination\"\r\nimport { Autoplay,FreeMode,Navigation, Pagination}  from 'swiper'\r\n\r\nimport Course_Card from './Course_Card'\r\n\r\nconst CourseSlider = ({Courses}) => {\r\n  return (\r\n    <>\r\n      {Courses?.length ? (\r\n        <Swiper\r\n          navigation={true} \r\n          slidesPerView={1}\r\n          spaceBetween={25}\r\n          loop={true}\r\n          modules={[FreeMode, Pagination]}\r\n          breakpoints={{\r\n            1024: {\r\n              slidesPerView: 3,\r\n            },\r\n          }}\r\n          className=\"max-h-[30rem] mx-auto\"\r\n        >\r\n          {Courses?.map((course, i) => (\r\n            <SwiperSlide key={i}>\r\n              <Course_Card course={course} Height={\"h-[230px]  md:h-[250px]\"} />\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      ) : (\r\n        <p className=\"text-xl text-richblack-5\">No Course Found</p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CourseSlider\r\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Catalog/Course_Card.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/InstructorSection.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/CodeBlocks.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Course/CourseDetailsCard.jsx",["548"],[],"import React from \"react\"\r\nimport copy from \"copy-to-clipboard\"\r\nimport { toast } from \"react-hot-toast\"\r\nimport { BsFillCaretRightFill } from \"react-icons/bs\"\r\nimport { FaShareSquare } from \"react-icons/fa\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { addToCart } from \"../../../slices/cartSlice\"\r\nimport { ACCOUNT_TYPE } from \"../../../utils/constants\"\r\n\r\n\r\nfunction CourseDetailsCard({ course, setConfirmationModal, handleBuyCourse }) {\r\n  const { user } = useSelector((state) => state.profile)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    thumbnail: ThumbnailImage,\r\n    price: CurrentPrice,\r\n    _id: courseId,\r\n  } = course\r\n\r\n  const handleShare = () => {\r\n    copy(window.location.href)\r\n    toast.success(\"Link copied to clipboard\")\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    if (user && user?.accountType === ACCOUNT_TYPE.INSTRUCTOR) {\r\n      toast.error(\"You are an Instructor. You can't buy a course.\")\r\n      return\r\n    }\r\n    if (token) {\r\n      dispatch(addToCart(course))\r\n      return\r\n    }\r\n    setConfirmationModal({\r\n      text1: \"You are not logged in!\",\r\n      text2: \"Please login to add To Cart\",\r\n      btn1Text: \"Login\",\r\n      btn2Text: \"Cancel\",\r\n      btn1Handler: () => navigate(\"/login\"),\r\n      btn2Handler: () => setConfirmationModal(null),\r\n    })\r\n  }\r\n\r\n  // console.log(\"Student already enrolled \", course?.studentsEnroled, user?._id)\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`flex flex-col gap-4 rounded-md bg-richblack-700 p-4 text-richblack-5`}\r\n      >\r\n        {/* Course Image */}\r\n        <img\r\n          src={ThumbnailImage}\r\n          alt={course?.courseName}\r\n          className=\"max-h-[300px] min-h-[180px] w-[400px] overflow-hidden rounded-2xl object-cover md:max-w-full\"\r\n        />\r\n\r\n        <div className=\"px-4\">\r\n          <div className=\"space-x-3 pb-4 text-3xl font-semibold\">\r\n            Rs. {CurrentPrice} \r\n          </div>\r\n          <div className=\"flex flex-col gap-4\">\r\n            <button\r\n              className=\"yellowButton rounded-md px-3 py-2 bg-blue-25 text-richblack-900\"\r\n              onClick={\r\n                user && course?.studentsEnrolled.includes(user?._id)\r\n                  ? () => navigate(\"/dashboard/enrolled-courses\")\r\n                  : handleBuyCourse\r\n              }\r\n            >\r\n              {user && course?.studentsEnrolled.includes(user?._id)\r\n                ? \"Go To Course\"\r\n                : \"Buy Now\"}\r\n            </button>\r\n            {(!user || !course?.studentsEnrolled.includes(user?._id)) && (\r\n              <button onClick={handleAddToCart} className=\"blackButton bg-richblack-5 px-3 py-2 rounded-md text-richblack-900\">\r\n                Add to Cart.\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <p className=\"pb-3 pt-6 text-center text-sm text-richblack-25\">\r\n              30-Day Money-Back Guarantee.\r\n            </p>\r\n          </div>\r\n\r\n          <div className={``}>\r\n            <p className={`my-2 text-xl font-semibold `}>\r\n              This Course Includes :\r\n            </p>\r\n            <div className=\"flex flex-col gap-3 text-sm text-caribbeangreen-100\">\r\n              {course?.instructions?.map((item, i) => {\r\n                return (\r\n                  <p className={`flex gap-2`} key={i}>\r\n                    <BsFillCaretRightFill />\r\n                    <span>{item}</span>\r\n                  </p>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <button\r\n              className=\"mx-auto flex items-center gap-2 py-6 text-richblack-100 \"\r\n              onClick={handleShare}\r\n            >\r\n              <FaShareSquare size={15} /> Share\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CourseDetailsCard","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Course/CourseAccordianBar.jsx",["549"],[],"import { useEffect, useRef, useState } from \"react\"\r\nimport { AiOutlineDown } from \"react-icons/ai\"\r\n\r\nimport CourseSubSectionAccordion from \"./CourseSubSectionAccordian\"\r\nexport default function CourseAccordionBar({ course, isActive, handleActive }) {\r\n  const contentEl = useRef(null)\r\n\r\n  // Accordian state\r\n  const [active, setActive] = useState(false)\r\n  useEffect(() => {\r\n    setActive(isActive?.includes(course._id))\r\n  }, [isActive])\r\n  const [sectionHeight, setSectionHeight] = useState(0)\r\n  useEffect(() => {\r\n    setSectionHeight(active ? contentEl.current.scrollHeight : 0)\r\n  }, [active])\r\n\r\n  return (\r\n    <div className=\"overflow-hidden border border-solid border-richblack-600 bg-richblack-700 text-richblack-5 last:mb-0\">\r\n      <div>\r\n        <div\r\n          className={`flex cursor-pointer items-start justify-between bg-opacity-20 px-7  py-6 transition-[0.3s]`}\r\n          onClick={() => {\r\n            handleActive(course._id)\r\n          }}\r\n        >\r\n          <div className=\"flex items-center gap-2\">\r\n            <i\r\n              className={\r\n                isActive.includes(course._id) ? \"rotate-180\" : \"rotate-0\"\r\n              }\r\n            >\r\n              <AiOutlineDown />\r\n            </i>\r\n            <p>{course?.sectionName}</p>\r\n          </div>\r\n          <div className=\"space-x-4\">\r\n            <span className=\"text-richblack-25\">\r\n              {`${course.subSection.length || 0} lecture(s)`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        ref={contentEl}\r\n        className={`relative h-0 overflow-hidden bg-richblack-900 transition-[height] duration-[0.35s] ease-[ease]`}\r\n        style={{\r\n          height: sectionHeight,\r\n        }}\r\n      >\r\n        <div className=\"text-textHead flex flex-col gap-2 px-7 py-6 font-semibold\">\r\n          {course?.subSection?.map((subSec, i) => {\r\n            return <CourseSubSectionAccordion subSec={subSec} key={i} />\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/hooks/useOnClickOutside.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/data/navbar-links.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/LearningLanguageSection.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/ExploreMore.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/ViewCourse/CourseReviewModal.jsx",["550"],["551"],"import { useEffect } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { RxCross2 } from \"react-icons/rx\"\r\nimport ReactStars from \"react-rating-stars-component\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport { createRating } from \"../../../services/operations/courseDetailsAPI\"\r\nimport IconBtn from \"../../common/IconBtn\"\r\n\r\nexport default function CourseReviewModal({ setReviewModal }) {\r\n  const { user } = useSelector((state) => state.profile)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { courseEntireData } = useSelector((state) => state.viewCourse)\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm()\r\n\r\n  useEffect(() => {\r\n    setValue(\"courseExperience\", \"\")\r\n    setValue(\"courseRating\", 0)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const ratingChanged = (newRating) => {\r\n    // console.log(newRating)\r\n    setValue(\"courseRating\", newRating)\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    await createRating(\r\n      {\r\n        courseId: courseEntireData._id,\r\n        rating: data.courseRating,\r\n        review: data.courseExperience,\r\n      },\r\n      token\r\n    )\r\n    setReviewModal(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[1000] !mt-0 grid h-screen w-screen place-items-center overflow-auto bg-white bg-opacity-10 backdrop-blur-sm\">\r\n      <div className=\"my-10 w-11/12 max-w-[700px] rounded-lg border border-richblack-400 bg-richblack-800\">\r\n        {/* Modal Header */}\r\n        <div className=\"flex items-center justify-between rounded-t-lg bg-richblack-700 p-5\">\r\n          <p className=\"text-xl font-semibold text-richblack-5\">Add Review</p>\r\n          <button onClick={() => setReviewModal(false)}>\r\n            <RxCross2 className=\"text-2xl text-richblack-5\" />\r\n          </button>\r\n        </div>\r\n        {/* Modal Body */}\r\n        <div className=\"p-6\">\r\n          <div className=\"flex items-center justify-center gap-x-4\">\r\n            <img\r\n              src={user?.image}\r\n              alt={user?.firstName + \"profile\"}\r\n              className=\"aspect-square w-[50px] rounded-full object-cover\"\r\n            />\r\n            <div className=\"\">\r\n              <p className=\"font-semibold text-richblack-5\">\r\n                {user?.firstName} {user?.lastName}\r\n              </p>\r\n              <p className=\"text-sm text-richblack-5\">Posting Publicly</p>\r\n            </div>\r\n          </div>\r\n          <form\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            className=\"mt-6 flex flex-col items-center\"\r\n          >\r\n            <ReactStars\r\n              count={5}\r\n              onChange={ratingChanged}\r\n              size={24}\r\n              activeColor=\"#ffd700\"\r\n            />\r\n            <div className=\"flex w-11/12 flex-col space-y-2\">\r\n              <label\r\n                className=\"text-sm text-richblack-5\"\r\n                htmlFor=\"courseExperience\"\r\n              >\r\n                Add Your Experience <sup className=\"text-pink-200\">*</sup>\r\n              </label>\r\n              <textarea\r\n                id=\"courseExperience\"\r\n                placeholder=\"Add Your Experience\"\r\n                {...register(\"courseExperience\", { required: true })}\r\n                className=\"form-style text-richblack-100 bg-richblack-700 rounded-md px-2 py-2 resize-x-none min-h-[130px] w-full\"\r\n              />\r\n              {errors.courseExperience && (\r\n                <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n                  Please Add Your Experience\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"mt-6 flex w-11/12 justify-end gap-x-2\">\r\n              <button\r\n                onClick={() => setReviewModal(false)}\r\n                className={`flex cursor-pointer items-center gap-x-2 rounded-md bg-richblack-300 py-[8px] px-[20px] font-semibold text-richblack-900`}\r\n              >\r\n                Cancel\r\n              </button>\r\n               <button className=\"bg-yellow-50 rounded-md px-4 py-1 font-semibold\">\r\n                Save\r\n               </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/ViewCourse/VideoDetailsSidebar.jsx",[],["552"],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/ProfileDropDown.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/IconBtn.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/InstructorDashboard/InstructorChart.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/InstructorCourses/CoursesTable.jsx",["553","554","555"],[],"import { useDispatch, useSelector } from \"react-redux\"\r\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"react-super-responsive-table\"\r\n\r\nimport { setCourse, setEditCourse } from \"../../../../slices/courseSlice\"\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\"\r\nimport { useState } from \"react\"\r\nimport { FaCheck } from \"react-icons/fa\"\r\nimport { FiEdit2 } from \"react-icons/fi\"\r\nimport { HiClock } from \"react-icons/hi\"\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { formatDate } from \"../../../../services/formatDate\"\r\nimport {\r\n  deleteCourse,\r\n  fetchInstructorCourses,\r\n} from \"../../../../services/operations/courseDetailsAPI\"\r\nimport { COURSE_STATUS } from \"../../../../utils/constants\"\r\nimport ConfirmationModal from \"../../../common/ConfirmationModal\"\r\n\r\nexport default function CoursesTable({ courses, setCourses }) {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const { token } = useSelector((state) => state.auth)\r\n  const [loading, setLoading] = useState(false)\r\n  const [confirmationModal, setConfirmationModal] = useState(null)\r\n  const TRUNCATE_LENGTH = 30\r\n\r\n  const handleCourseDelete = async (courseId) => {\r\n    setLoading(true)\r\n    await deleteCourse({ courseId: courseId }, token)\r\n    const result = await fetchInstructorCourses(token)\r\n    if (result) {\r\n      setCourses(result)\r\n    }\r\n    setConfirmationModal(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  console.log(\"All Course \", courses)\r\n\r\n  return (\r\n    <>\r\n      <Table className=\"rounded-xl border relative border-richblack-800\">\r\n        <Thead>\r\n          <Tr className=\"flex justify-between md:gap-x-10 md:w-full rounded-t-md border-b border-b-richblack-800 md:px-6 py-2\">\r\n          <div className=\"text-richblack-100\">\r\n            <Th className=\"flex-1 text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Courses\r\n            </Th>\r\n            \r\n            {/* <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Duration\r\n            </Th> */}\r\n          </div>\r\n          <div className=\"flex gap-x-8\">\r\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Price\r\n            </Th>\r\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Actions\r\n            </Th>\r\n          </div>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {courses?.length === 0 ? (\r\n            <Tr>\r\n              <Td className=\"py-10 text-center text-2xl font-medium text-richblack-100\">\r\n                No courses found\r\n                {/* TODO: Need to change this state */}\r\n              </Td>\r\n            </Tr>\r\n          ) : (\r\n            courses?.map((course) => (\r\n              <Tr\r\n                key={course._id}\r\n                className=\"flex gap-x-10 border-b w-full border-richblack-800 px-6 py-8\"\r\n              >\r\n                <Td className=\"flex flex-1 gap-x-4 w-[100%]\">\r\n                  <img\r\n                    src={course?.thumbnail}\r\n                    alt={course?.courseName}\r\n                    className=\"h-[148px] w-[220px] rounded-lg object-cover\"\r\n                  />\r\n                  <div className=\"flex flex-col justify-between\">\r\n                    <p className=\"text-lg font-semibold text-richblack-5\">\r\n                      {course.courseName}\r\n                    </p>\r\n                    <p className=\"text-xs text-richblack-300\">\r\n                      {course.courseDescription.split(\" \").length >\r\n                      TRUNCATE_LENGTH\r\n                        ? course.courseDescription\r\n                            .split(\" \")\r\n                            .slice(0, TRUNCATE_LENGTH)\r\n                            .join(\" \") + \"...\"\r\n                        : course.courseDescription}\r\n                    </p>\r\n                    <p className=\"text-[12px] text-white\">\r\n                      Created: {formatDate(course.createdAt)}\r\n                    </p>\r\n                    {course.status === COURSE_STATUS.DRAFT ? (\r\n                      <p className=\"flex w-fit flex-row items-center gap-2 rounded-full bg-richblack-700 px-2 py-[2px] text-[12px] font-medium text-pink-100\">\r\n                        <HiClock size={14} />\r\n                        Drafted\r\n                      </p>\r\n                    ) : (\r\n                      <p className=\"flex w-fit flex-row items-center gap-2 rounded-full bg-richblack-700 px-2 py-[2px] text-[12px] font-medium text-richblack-100\">\r\n                        <div className=\"flex h-3 w-3 items-center justify-center rounded-full bg-richblack-100 text-richblack-700\">\r\n                          <FaCheck size={8} />\r\n                        </div>\r\n                        Published\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </Td>\r\n                {/* <Td className=\"text-sm font-medium text-richblack-100\">\r\n                  2hr 30mins\r\n                </Td> */}\r\n                <Td className=\"text-sm font-medium text-richblack-100\">\r\n                  ₹{course.price}\r\n                </Td>\r\n                <Td className=\"text-sm font-medium text-richblack-100 \">\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={() => {\r\n                      navigate(`/dashboard/edit-course/${course._id}`)\r\n                    }}\r\n                    title=\"Edit\"\r\n                    className=\"px-2 transition-all duration-200 hover:scale-110 hover:text-caribbeangreen-300\"\r\n                  >\r\n                    <FiEdit2 size={20} />\r\n                  </button>\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={() => {\r\n                      setConfirmationModal({\r\n                        text1: \"Do you want to delete this course?\",\r\n                        text2:\r\n                          \"All the data related to this course will be deleted\",\r\n                        btn1Text: !loading ? \"Delete\" : \"Loading...  \",\r\n                        btn2Text: \"Cancel\",\r\n                        btn1Handler: !loading\r\n                          ? () => handleCourseDelete(course._id)\r\n                          : () => {},\r\n                        btn2Handler: !loading\r\n                          ? () => setConfirmationModal(null)\r\n                          : () => {},\r\n                      })\r\n                    }}\r\n                    title=\"Delete\"\r\n                    className=\"px-1 transition-all duration-200 hover:scale-110 hover:text-[#ff0000]\"\r\n                  >\r\n                    <RiDeleteBin6Line size={20} />\r\n                  </button>\r\n                </Td>\r\n              </Tr>\r\n            ))\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n      {confirmationModal && <ConfirmationModal modalData={confirmationModal} />}\r\n    </>\r\n  )\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/ChangeProfilePicture.jsx",["556"],[],"import { useEffect, useRef, useState } from \"react\";\nimport { FiUpload } from \"react-icons/fi\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { updateDisplayPicture } from \"../../../../services/operations/SettingsAPI\";\nimport IconBtn from \"../../../common/IconBtn\";\n\nexport default function ChangeProfilePicture() {\n  const { token } = useSelector((state) => state.auth);\n  const { user } = useSelector((state) => state.profile);\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [imageFile, setImageFile] = useState(null);\n  const [previewSource, setPreviewSource] = useState(null);\n\n  const fileInputRef = useRef(null);\n\n  const handleClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    // console.log(file)\n    if (file) {\n      setImageFile(file);\n      previewFile(file);\n    }\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleFileUpload = () => {\n    try {\n      console.log(\"uploading...\");\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"displayPicture\", imageFile);\n      console.log(\"formdata\", formData)\n      dispatch(updateDisplayPicture(token, formData)).then(() => {\n        setLoading(false);\n      });\n    } catch (error) {\n      console.log(\"ERROR MESSAGE - \", error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (imageFile) {\n      previewFile(imageFile);\n    }\n  }, [imageFile]);\n  return (\n    <>\n      <div className=\"flex items-center justify-between rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-8 px-12 text-richblack-5\">\n        <div className=\"flex items-center gap-x-4\">\n          <img\n            src={previewSource || user?.image}\n            alt={`profile-${user?.firstName}`}\n            className=\"aspect-square w-[78px] rounded-full object-cover\"\n          />\n          <div className=\"space-y-2\">\n            <p>Change Profile Picture</p>\n            <div className=\"flex flex-row gap-3\">\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                onChange={handleFileChange}\n                className=\"hidden\"\n                accept=\"image/png, image/gif, image/jpeg\"\n              />\n              <button\n                onClick={handleClick}\n                disabled={loading}\n                className=\"cursor-pointer text-base rounded-md py-2 px-5 bg-richblack-50 text-richblack-900\"\n              >\n                Select\n              </button>\n              <button \n              onClick={handleFileUpload}\n              className=\"flex items-center cursor-pointer gap-1 text-base font-medium text-richblack-50 bg-richblack-700 rounded-md px-3\">\n                <div>Upload</div>\n                <FiUpload/>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/EditProfile.jsx",["557"],[],"import { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { updateProfile } from \"../../../../services/operations/SettingsAPI\";\nimport IconBtn from \"../../../common/IconBtn\";\nimport { IoIosArrowDown } from \"react-icons/io\";\n\nconst genders = [\"Male\", \"Female\", \"Non-Binary\", \"Prefer not to say\", \"Other\"];\n\nexport default function EditProfile() {\n  const { user } = useSelector((state) => state.profile);\n  const { token } = useSelector((state) => state.auth);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const submitProfileForm = async (data) => {\n    // console.log(\"Form Data - \", data)\n    try {\n      dispatch(updateProfile(token, data));\n    } catch (error) {\n      console.log(\"ERROR MESSAGE - \", error.message);\n    }\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit(submitProfileForm)}>\n        {/* Profile Information */}\n        <div className=\"my-10 flex flex-col gap-y-6 rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-8 px-12\">\n          <h2 className=\"text-lg font-semibold text-richblack-5\">\n            Profile Information\n          </h2>\n          <div className=\"flex flex-col gap-5 lg:flex-row\">\n            <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n              <label\n                htmlFor=\"firstName\"\n                className=\"lable-style text-[14px] font-normal text-richblack-5\"\n              >\n                First Name\n              </label>\n              <input\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                placeholder=\"Enter first name\"\n                className=\"form-style px-3 py-3 bg-[#2C333F] text-[#999DAA] rounded-md\"\n                {...register(\"firstName\", { required: true })}\n                defaultValue={user?.firstName}\n              />\n              {errors.firstName && (\n                <span className=\"-mt-1 text-[12px] text-richblack-100\">\n                  Please enter your first name.\n                </span>\n              )}\n            </div>\n            <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n              <label\n                htmlFor=\"lastName\"\n                className=\"lable-style  text-[14px] text-richblack-5\"\n              >\n                Last Name\n              </label>\n              <input\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                placeholder=\"Enter first name\"\n                className=\"form-style px-3 py-3 text-[#999DAA] bg-[#2C333F] rounded-md\"\n                {...register(\"lastName\", { required: true })}\n                defaultValue={user?.lastName}\n              />\n              {errors.lastName && (\n                <span className=\"-mt-1 text-[12px] text-richblack-100\">\n                  Please enter your last name.\n                </span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex flex-col gap-5 lg:flex-row\">\n            <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n              <label\n                htmlFor=\"dateOfBirth\"\n                className=\"lable-style  text-[14px] text-richblack-5\"\n              >\n                Date of Birth\n              </label>\n              <input\n                type=\"date\"\n                name=\"dateOfBirth\"\n                id=\"dateOfBirth\"\n                className=\"form-style px-3 py-3 text-[#999DAA] bg-[#2C333F] rounded-md\"\n                {...register(\"dateOfBirth\", {\n                  required: {\n                    value: true,\n                    message: \"Please enter your Date of Birth.\",\n                  },\n                  max: {\n                    value: new Date().toISOString().split(\"T\")[0],\n                    message: \"Date of Birth cannot be in the future.\",\n                  },\n                })}\n                defaultValue={user?.additionalDetails?.dateOfBirth}\n              />\n              {errors.dateOfBirth && (\n                <span className=\"-mt-1 text-[12px] text-richblack-100\">\n                  {errors.dateOfBirth.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"flex flex-col gap-2 lg:w-[48%] relative\">\n              <label\n                htmlFor=\"gender\"\n                className=\"lable-style text-[14px] text-richblack-5\"\n              >\n                Gender\n              </label>\n              <select\n                type=\"text\"\n                name=\"gender\"\n                id=\"gender\"\n                className=\"form-style px-3 py-3 appearance-none text-[#999DAA] bg-[#2C333F] rounded-md pl-3 pr-10\"\n                {...register(\"gender\", { required: true })}\n                defaultValue={user?.additionalDetails?.gender}\n              >\n                {genders.map((ele, i) => (\n                  <option key={i} value={ele}>\n                    {ele}\n                  </option>\n                ))}\n              </select>\n              <IoIosArrowDown className=\"absolute right-3 top-2/3 transform -translate-y-1/2 text-[#838894]\" />\n              {errors.gender && (\n                <span className=\"-mt-1 text-[12px] text-richblack-100\">\n                  Please enter your Date of Birth.\n                </span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex flex-col gap-5 lg:flex-row\">\n            <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n              <label\n                htmlFor=\"contactNumber\"\n                className=\"lable-style  text-[14px] text-richblack-5\"\n              >\n                Contact Number\n              </label>\n              <input\n                type=\"tel\"\n                name=\"contactNumber\"\n                id=\"contactNumber\"\n                placeholder=\"Enter Contact Number\"\n                className=\"form-style px-3 py-3 text-[#999DAA] bg-[#2C333F] rounded-md\"\n                {...register(\"contactNumber\", {\n                  required: {\n                    value: true,\n                    message: \"Please enter your Contact Number.\",\n                  },\n                  maxLength: { value: 12, message: \"Invalid Contact Number\" },\n                  minLength: { value: 10, message: \"Invalid Contact Number\" },\n                })}\n                defaultValue={user?.additionalDetails?.contactNumber}\n              />\n              {errors.contactNumber && (\n                <span className=\"-mt-1 text-[12px] text-richblack-100\">\n                  {errors.contactNumber.message}\n                </span>\n              )}\n            </div>\n            <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n              <label\n                htmlFor=\"about\"\n                className=\"lable-style  text-[14px] text-richblack-5\"\n              >\n                About\n              </label>\n              <input\n                type=\"text\"\n                name=\"about\"\n                id=\"about\"\n                placeholder=\"Enter Bio Details\"\n                className=\"form-style bg-[#2C333F] px-3 py-3 rounded-md text-[#999DAA]\"\n                {...register(\"about\", { required: true })}\n                defaultValue={user?.additionalDetails?.about}\n              />\n              {errors.about && (\n                <span className=\"-mt-1 text-[12px] text-richblack-100\">\n                  Please enter your About.\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-2 text-richblack-50\">\n          <button\n            onClick={() => {\n              navigate(\"/dashboard/my-profile\");\n            }}\n            className=\"cursor-pointer rounded-md bg-richblack-700 py-2 px-5 font-normal text-richblack-50\"\n          >\n            Cancel\n          </button>\n          \n          <button type=\"submit\" className=\"text-[#000814] bg-[#fffdf2] rounded-md px-5\">\n            Save\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/UpdatePassword.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Settings/DeleteAccount.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Cart/RenderCartCourses.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/Cart/RenderTotalAmount.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/RenderSteps.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/data/dashboard-links.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/data/homepage-explore.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/ContactPage/ContactUsForm.jsx",["558"],[],"import React, { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\n\r\nimport CountryCode from \"../../data/countrycode.json\"\r\nimport { apiConnector } from \"../../services/apiconnector\"\r\nimport { contactusEndpoint } from \"../../services/apis\"\r\n\r\nconst ContactUsForm = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isSubmitSuccessful },\r\n  } = useForm()\r\n\r\n  const submitContactForm = async (data) => {\r\n    // console.log(\"Form Data - \", data)\r\n    try {\r\n      setLoading(true)\r\n      const res = await apiConnector(\r\n        \"POST\",\r\n        contactusEndpoint.CONTACT_US_API,\r\n        data\r\n      )\r\n      // console.log(\"Email Res - \", res)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.log(\"ERROR MESSAGE - \", error.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isSubmitSuccessful) {\r\n      reset({\r\n        email: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        message: \"\",\r\n        phoneNo: \"\",\r\n      })\r\n    }\r\n  }, [reset, isSubmitSuccessful])\r\n\r\n  return (\r\n    <form\r\n      className=\"flex flex-col gap-7\"\r\n      onSubmit={handleSubmit(submitContactForm)}\r\n    >\r\n      <div className=\"flex flex-col gap-5 lg:flex-row\">\r\n        <div className=\"flex flex-col gap-2 lg:w-[48%]\">\r\n          <label htmlFor=\"firstname\" className=\"lable-style\">\r\n            First Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            id=\"firstname\"\r\n            placeholder=\"Enter first name\"\r\n            className=\"form-style\"\r\n            {...register(\"firstname\", { required: true })}\r\n          />\r\n          {errors.firstname && (\r\n            <span className=\"-mt-1 text-[12px] text-richblack-100\">\r\n              Please enter your name.\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"flex flex-col gap-2 lg:w-[48%]\">\r\n          <label htmlFor=\"lastname\" className=\"lable-style\">\r\n            Last Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            id=\"lastname\"\r\n            placeholder=\"Enter last name\"\r\n            className=\"form-style\"\r\n            {...register(\"lastname\")}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col gap-2\">\r\n        <label htmlFor=\"email\" className=\"lable-style\">\r\n          Email Address\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Enter email address\"\r\n          className=\"form-style\"\r\n          {...register(\"email\", { required: true })}\r\n        />\r\n        {errors.email && (\r\n          <span className=\"-mt-1 text-[12px] text-richblack-100\">\r\n            Please enter your Email address.\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex flex-col gap-2\">\r\n        <label htmlFor=\"phonenumber\" className=\"lable-style\">\r\n          Phone Number\r\n        </label>\r\n\r\n        <div className=\"flex gap-5\">\r\n          <div className=\"flex w-[81px] flex-col gap-2\">\r\n            <select\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              id=\"firstname\"\r\n              placeholder=\"Enter first name\"\r\n              className=\"form-style\"\r\n              {...register(\"countrycode\", { required: true })}\r\n            >\r\n              {CountryCode.map((ele, i) => {\r\n                return (\r\n                  <option key={i} value={ele.code}>\r\n                    {ele.code} -{ele.country}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"flex w-[calc(100%-90px)] flex-col gap-2\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"phonenumber\"\r\n              id=\"phonenumber\"\r\n              placeholder=\"12345 67890\"\r\n              className=\"form-style\"\r\n              {...register(\"phoneNo\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your Phone Number.\",\r\n                },\r\n                maxLength: { value: 12, message: \"Invalid Phone Number\" },\r\n                minLength: { value: 10, message: \"Invalid Phone Number\" },\r\n              })}\r\n            />\r\n          </div>\r\n        </div>\r\n        {errors.phoneNo && (\r\n          <span className=\"-mt-1 text-[12px] text-richblack-100\">\r\n            {errors.phoneNo.message}\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex flex-col gap-2\">\r\n        <label htmlFor=\"message\" className=\"lable-style\">\r\n          Message\r\n        </label>\r\n        <textarea\r\n          name=\"message\"\r\n          id=\"message\"\r\n          cols=\"30\"\r\n          rows=\"7\"\r\n          placeholder=\"Enter your message here\"\r\n          className=\"form-style\"\r\n          {...register(\"message\", { required: true })}\r\n        />\r\n        {errors.message && (\r\n          <span className=\"-mt-1 text-[12px] text-richblack-100\">\r\n            Please enter your Message.\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        disabled={loading}\r\n        type=\"submit\"\r\n        className={`rounded-md bg-richblack-5 px-6 py-3 text-center text-[13px] font-bold text-black shadow-[2px_2px_0px_0px_rgba(255,255,255,0.18)] \r\n         ${\r\n           !loading &&\r\n           \"transition-all duration-200 hover:scale-95 hover:shadow-none\"\r\n         }  disabled:bg-richblack-500 sm:text-[16px] `}\r\n      >\r\n        Send Message\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ContactUsForm","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/LoginForm.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/SidebarLink.jsx",["559"],[],"import React from \"react\";\r\nimport * as Icons from \"react-icons/vsc\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { matchPath } from \"react-router-dom\";\r\n\r\nconst SidebarLink = ({ link, iconName }) => {\r\n  const Icon = Icons[iconName];\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const matchRoute = (route) => {\r\n    return matchPath({ path: route }, location.pathname);\r\n  };\r\n\r\n  return (\r\n\r\n      <NavLink\r\n        to={link.path}\r\n        className={`relative px-8 py-2 text-sm font-medium ${\r\n          matchRoute(link.path) ? \"bg-yellow-800\" : \"bg-opacity-0\"\r\n        }`}\r\n      >\r\n        <span\r\n          className={`absolute left-0 top-0 h-full w-[0.2rem] bg-richblack-50 ${\r\n            matchRoute(link.path) ? \"opacity-100\" : \"opacity-0\"\r\n          }`}\r\n        ></span>\r\n\r\n        <div className=\"flex items-center gap-x-2\">\r\n          <Icon className=\"text-lg\" />\r\n          <span>{link.name}</span>\r\n        </div>\r\n      </NavLink>\r\n    \r\n  );\r\n};\r\n\r\nexport default SidebarLink\r\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Auth/SignupForm.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Course/CourseSubSectionAccordian.jsx",["560","561","562","563"],[],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { AiOutlineDown } from \"react-icons/ai\"\r\nimport { HiOutlineVideoCamera } from \"react-icons/hi\"\r\n\r\nfunction CourseSubSectionAccordion({ subSec }) {\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between py-2\">\r\n        <div className={`flex items-center gap-2`}>\r\n          <span>\r\n            <HiOutlineVideoCamera />\r\n          </span>\r\n          <p>{subSec?.title}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseSubSectionAccordion","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/HomePage/CourseCard.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/services/operations/SettingsAPI.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseInformation/CourseInformationForm.jsx",["564","565","566","567","568"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MdNavigateNext } from \"react-icons/md\"\r\nimport IconBtn from \"../../../../common/IconBtn\"\r\nimport {\r\n  addCourseDetails,\r\n  editCourseDetails,\r\n  fetchCourseCategories,\r\n} from \"../../../../../services/operations/courseDetailsAPI\";\r\nimport { HiOutlineCurrencyRupee } from \"react-icons/hi\";\r\nimport { BiUpload } from \"react-icons/bi\";\r\nimport RequirementField from \"./RequirementField\";\r\nimport { setStep, setCourse } from \"../../../../../slices/courseSlice\";\r\nimport { COURSE_STATUS } from \"../../../../../utils/constants\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport ChipInput from \"./ChipInput\";\r\nimport Upload from \"../Upload\";\r\n\r\nconst CourseInformationForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { course, editCourse } = useSelector((state) => state.course);\r\n  const [loading, setLoading] = useState(false);\r\n  const [courseCategories, setCourseCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCategories = async () => {\r\n      setLoading(true);\r\n      const categories = await fetchCourseCategories();\r\n      if (categories.length > 0) {\r\n        setCourseCategories(categories);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    if (editCourse) {\r\n      setValue(\"courseTitle\", course.courseName);\r\n      setValue(\"courseShortDesc\", course.courseDescription);\r\n      setValue(\"coursePrice\", course.price);\r\n      setValue(\"courseTags\", course.tag);\r\n      setValue(\"courseBenefits\", course.whatYouWillLearn);\r\n      setValue(\"courseCategory\", course.category);\r\n      setValue(\"courseRequirements\", course.instructions);\r\n      setValue(\"courseImage\", course.thumbnail);\r\n    }\r\n\r\n    getCategories();\r\n  }, []);\r\n\r\n  const isFormUpdated = () => {\r\n    const currentValues = getValues();\r\n    if (\r\n      currentValues.courseTitle !== course.courseName ||\r\n      currentValues.courseShortDesc !== course.courseDescription ||\r\n      currentValues.coursePrice !== course.price ||\r\n      currentValues.courseTags.toString() !== course.tag.toString() ||\r\n      currentValues.courseBenefits !== course.whatYouWillLearn ||\r\n      currentValues.courseCategory._id !== course.category._id ||\r\n      currentValues.courseImage !== course.thumbnail ||\r\n      currentValues.courseRequirements.toString() !==\r\n        course.instructions.toString()\r\n    ){\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //handles next button click\r\n  const onSubmit = async (data) => {\r\n    if (editCourse) {\r\n      if (isFormUpdated()) {\r\n        const currentValues = getValues();\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"courseId\", course._id);\r\n        if (currentValues.courseTitle !== course.courseName) {\r\n          formData.append(\"courseName\", data.courseTitle);\r\n        }\r\n\r\n        if (currentValues.courseShortDesc !== course.courseDescription) {\r\n          formData.append(\"courseDescription\", data.courseShortDesc);\r\n        }\r\n\r\n        if (currentValues.coursePrice !== course.price) {\r\n          formData.append(\"price\", data.coursePrice);\r\n        }\r\n\r\n        if (currentValues.courseTags.toString() !== course.tag.toString()) {\r\n          formData.append(\"tag\", JSON.stringify(data.courseTags));\r\n        }\r\n\r\n        if (currentValues.courseBenefits !== course.whatYouWillLearn) {\r\n          formData.append(\"whatYouWillLearn\", data.courseBenefits);\r\n        }\r\n\r\n        if (currentValues.courseCategory._id !== course.category._id) {\r\n          formData.append(\"category\", data.courseCategory);\r\n        }\r\n        // console.log(\"cat sahi\");\r\n        if (\r\n          currentValues.courseRequirements.toString() !==\r\n          course.instructions.toString()\r\n        ) {\r\n          formData.append(\r\n            \"instructions\",\r\n            JSON.stringify(data.courseRequirements)\r\n          );\r\n        }\r\n\r\n        if (currentValues.courseImage !== course.thumbnail) {\r\n          formData.append(\"thumbnailImage\", data.courseImage);\r\n        }\r\n\r\n        setLoading(true);\r\n        const result = await editCourseDetails(formData, token);\r\n        setLoading(false);\r\n        if (result) {\r\n          dispatch(setStep(2));\r\n          dispatch(setCourse(result));\r\n        }\r\n      } else {\r\n        toast.error(\"No Changes made so far\");\r\n      }\r\n      console.log(\"PRINTING FORMDATA\", formData);\r\n      console.log(\"PRINTING result\", result);\r\n\r\n      return;\r\n    }\r\n\r\n    //create a new course\r\n    const formData = new FormData();\r\n    // console.log(\"PRINTING FORMDATA\", formData);\r\n    // console.log(\"PRINTING result\", result);\r\n    formData.append(\"courseName\", data.courseTitle);\r\n    formData.append(\"courseDescription\", data.courseShortDesc);\r\n    formData.append(\"price\", data.coursePrice);\r\n    formData.append(\"whatYouWillLearn\", data.courseBenefits);\r\n    formData.append(\"category\", data.courseCategory);\r\n    formData.append(\"instructions\", JSON.stringify(data.courseRequirements));\r\n    formData.append(\"status\", COURSE_STATUS.DRAFT);\r\n    formData.append(\"tag\", JSON.stringify(data.courseTags));\r\n    formData.append(\"thumbnailImage\", data.courseImage);\r\n\r\n    setLoading(true);\r\n    console.log(\"BEFORE add course API call\");\r\n    console.log(\"PRINTING FORMDATAiii\", formData);\r\n    formData.forEach((value, key) => {\r\n      console.log(key, value);\r\n    });\r\n    \r\n    const result = await addCourseDetails(formData, token);\r\n    if (result) {\r\n      //console.log(setCourse(result));\r\n      dispatch(setStep(2));\r\n      dispatch(setCourse(result));\r\n    }\r\n    setLoading(false);\r\n    console.log(\"PRINTING FORMDATAAAA\", formData);\r\n    console.log(\"PRINTING result\", result);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      className=\"rounded-md border-richblack-700 bg-richblack-800 p-6 space-y-8\"\r\n    >\r\n      <div className=\"text-richblack-100\">\r\n        <label htmlFor=\"courseTitle\">\r\n          Course Title<sup>*</sup>\r\n        </label>\r\n        <input\r\n          id=\"courseTitle\"\r\n          placeholder=\"Enter Course Title\"\r\n          {...register(\"courseTitle\", { required: true })}\r\n          className=\"w-full px-3 py-2 rounded-md bg-richblack-700 text-richblack-100\"\r\n        />\r\n        {errors.courseTitle && <span>Course Title is Required**</span>}\r\n      </div>\r\n\r\n      <div className=\"text-richblack-100\">\r\n        <label htmlFor=\"courseShortDesc\">\r\n          Course Short Description<sup>*</sup>\r\n        </label>\r\n        <textarea\r\n          id=\"courseShortDesc\"\r\n          placeholder=\"Enter Description\"\r\n          {...register(\"courseShortDesc\", { required: true })}\r\n          className=\"w-full px-3 py-2 rounded-md bg-richblack-700 text-richblack-100 h-[150px]\"\r\n        />\r\n        {errors.courseShortDesc && (\r\n          <span>Course Description is required**</span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"text-richblack-100 relative\">\r\n        <label htmlFor=\"coursePrice\">\r\n          Course Price<sup>*</sup>\r\n        </label>\r\n        <input\r\n          id=\"coursePrice\"\r\n          placeholder=\"Enter Course Price\"\r\n          {...register(\"coursePrice\", {\r\n            required: true,\r\n            valueAsNumber: true,\r\n          })}\r\n          className=\"w-full pl-6 pr-3 py-2 rounded-md bg-richblack-700 text-richblack-100\"\r\n          />\r\n        <HiOutlineCurrencyRupee className=\"absolute top-[55%] left-1 text-richblack-400\" />\r\n        {errors.coursePrice && <span>Course Price is Required**</span>}\r\n      </div>\r\n\r\n      <div className=\"text-richblack-100\">\r\n        <label htmlFor=\"courseCategory\">\r\n          Course Category<sup>*</sup>\r\n        </label>\r\n        <select\r\n          {...register(\"courseCategory\", { required: true })}\r\n          defaultValue=\"\"\r\n          id=\"courseCategory\"\r\n          className=\"w-full px-3 py-2 rounded-md bg-richblack-700 text-richblack-100\"\r\n          \r\n          // ************************************************************\r\n          \r\n         \r\n        >\r\n          <option value=\"\" disabled>\r\n            Choose a Category\r\n          </option>\r\n\r\n          {!loading &&\r\n            courseCategories?.map((category, index) => (\r\n              <option key={index} value={category?._id}>\r\n                {category?.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        {errors.courseCategory && <span>Course Category is Required</span>}\r\n      </div>\r\n\r\n      {/* create a custom component for handling tags input */}\r\n      <ChipInput\r\n            label=\"Tags\"\r\n            name=\"courseTags\"\r\n            placeholder=\"Enter Tags and press Enter\"\r\n            register={register}\r\n            errors={errors}\r\n            setValue={setValue}\r\n            getValues = {getValues}\r\n      />\r\n\r\n      {/* create a component for uploading and showing preview of media */}\r\n      <Upload\r\n        name=\"courseImage\"\r\n        label=\"Course Thumbnail\"\r\n        register={register}\r\n        setValue={setValue}\r\n        errors={errors}\r\n        editData={editCourse ? course?.thumbnail : null}\r\n      />\r\n\r\n      {/*     Benefits of the Course */}\r\n      <div className=\"text-richblack-100\">\r\n        <label>\r\n          Benefits of the course<sup>*</sup>\r\n        </label>\r\n        <textarea\r\n          id=\"coursebenefits\"\r\n          placeholder=\"Enter Benefits of the course\"\r\n          {...register(\"courseBenefits\", { required: true })}\r\n          className=\"w-full px-3 py-2 rounded-md bg-richblack-700 text-richblack-100 min-h-[150px]\"\r\n        />\r\n        {errors.courseBenefits && (\r\n          <span>Benefits of the course are required**</span>\r\n        )}\r\n      </div>\r\n\r\n      <RequirementField\r\n        name=\"courseRequirements\"\r\n        label=\"Requirements/Instructions\"\r\n        register={register}\r\n        errors={errors}\r\n        setValue={setValue}\r\n        getValues={getValues}\r\n      />\r\n      <div className=\"flex gap-x-2\">\r\n        {editCourse && (\r\n          <button\r\n            onClick={() => dispatch(setStep(2))}\r\n            className=\"flex items-center gap-x-2 text-black bg-richblack-300 rounded-md px-3 py-1\"\r\n          >\r\n            Continue Without Saving\r\n          </button>\r\n        )}\r\n\r\n        <div className=\"flex text-richblack-900 rounded-md px-3 py-1 font-medium items-center text-md bg-richblack-50 w-fit\">\r\n          <button>\r\n            {\r\n              !editCourse?\"Next\" : \"Save Changes\"\r\n            }\r\n          </button>\r\n          <MdNavigateNext />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CourseInformationForm;\r\n","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseBuilder/CourseBuilderForm.jsx",["569"],[],"import { useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { toast } from \"react-hot-toast\"\r\nimport { IoAddCircleOutline } from \"react-icons/io5\"\r\nimport { MdNavigateNext } from \"react-icons/md\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  createSection,\r\n  updateSection,\r\n} from \"../../../../../services/operations/courseDetailsAPI\"\r\nimport {\r\n  setCourse,\r\n  setEditCourse,\r\n  setStep\r\n} from \"../../../../../slices/courseSlice\"\r\nimport IconBtn from \"../../../../common/IconBtn\"\r\nimport NestedView from \"./NestedView\"\r\n\r\nexport default function CourseBuilderForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm()\r\n\r\n  const { course } = useSelector((state) => state.course);\r\n  const { token } = useSelector((state) => state.auth);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editSectionName, setEditSectionName] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  // handle form submission\r\n  const onSubmit = async (data) => {\r\n    // console.log(data)\r\n    setLoading(true)\r\n\r\n    let result\r\n\r\n    if (editSectionName) {\r\n      result = await updateSection(\r\n        {\r\n          sectionName: data.sectionName,\r\n          sectionId: editSectionName,\r\n          courseId: course._id,\r\n        },\r\n        token\r\n      )\r\n      // console.log(\"edit\", result)\r\n    } else {\r\n      result = await createSection(\r\n        {\r\n          sectionName: data.sectionName,\r\n          courseId: course._id,\r\n        },\r\n        token\r\n      )\r\n    }\r\n    if (result) {\r\n      // console.log(\"section result\", result)\r\n      dispatch(setCourse(result))\r\n      //console.log(\"here it is->\",result);\r\n      setEditSectionName(null)\r\n      setValue(\"sectionName\", \"\")\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const cancelEdit = () => {\r\n    setEditSectionName(null);\r\n    setValue(\"sectionName\", \"\");\r\n  }\r\n\r\n  const handleChangeEditSectionName = (sectionId, sectionName) => {\r\n    if (editSectionName === sectionId) {\r\n      cancelEdit()\r\n      return\r\n    }\r\n    setEditSectionName(sectionId)\r\n    setValue(\"sectionName\", sectionName)\r\n  }\r\n\r\n  const goToNext = () => {\r\n    if (course.courseContent.length === 0) {\r\n      toast.error(\"Please add atleast one section\")\r\n      return\r\n    }\r\n    if (\r\n      course.courseContent.some((section) => section.subSection.length === 0)\r\n    ) {\r\n      toast.error(\"Please add atleast one lecture in each section\")\r\n      return\r\n    }\r\n    dispatch(setStep(3))\r\n  }\r\n\r\n  const goBack = () => {\r\n    dispatch(setStep(1))\r\n    dispatch(setEditCourse(true))\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8 rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-6\">\r\n      <p className=\"text-2xl font-semibold text-richblack-5\">Course Builder</p>\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n        <div className=\"flex flex-col space-y-2\">\r\n          <label className=\"text-sm text-richblack-5\" htmlFor=\"sectionName\">\r\n            Section Name <sup className=\"text-pink-200\">*</sup>\r\n          </label>\r\n          <input\r\n            id=\"sectionName\"\r\n            disabled={loading}\r\n            placeholder=\"Add a section to build your course\"\r\n            {...register(\"sectionName\", { required: true })}\r\n            className=\"form-style w-full rounded-md px-3 py-2 bg-richblack-700 text-richblack-100\"\r\n          />\r\n          {errors.sectionName && (\r\n            <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n              Section name is required\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"flex items-end gap-x-4\">\r\n          {/* <IconBtn\r\n            type=\"Submit\"\r\n            disabled={loading}\r\n            text={editSectionName ? \"Edit Section Name\" : \"Create Section\"}\r\n            outline={true}\r\n          >\r\n            <IoAddCircleOutline size={20} className=\"text-yellow-50\" />\r\n          </IconBtn> */}\r\n          <div className=\"flex items-center gap-x-1 text-richblack-100\">\r\n            <button>{editSectionName ? \"Edit Section Name\" : \"Create Section\"}</button>\r\n            <IoAddCircleOutline size={20} className=\"text-richblack-50\" />\r\n          </div>\r\n          {editSectionName && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={cancelEdit}\r\n              className=\"text-sm text-richblack-300 underline\"\r\n            >\r\n              Cancel Edit\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n      {course.courseContent.length > 0 && (\r\n        <NestedView handleChangeEditSectionName={handleChangeEditSectionName} />\r\n      )}\r\n      {/* Next Prev Button */}\r\n      <div className=\"flex justify-end gap-x-3\">\r\n        <button\r\n          onClick={goBack}\r\n          className={`flex cursor-pointer items-center gap-x-2 rounded-md bg-richblack-300 py-[8px] px-[20px] font-semibold text-richblack-900`}\r\n        >\r\n          Back\r\n        </button>\r\n        {/* <IconBtn disabled={loading} text=\"Next\" onclick={goToNext}>\r\n          <MdNavigateNext />\r\n        </IconBtn> */}\r\n        <div className=\"flex items-center bg-richblack-50 rounded-md px-3 py-1 font-semibold\" onClick={goToNext}>\r\n          <button>Next</button>\r\n          <MdNavigateNext />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n} ","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/PublishCourse/index.jsx",["570","571"],[],"import { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { editCourseDetails } from \"../../../../../services/operations/courseDetailsAPI\"\r\nimport { resetCourseState, setStep } from \"../../../../../slices/courseSlice\"\r\nimport { COURSE_STATUS } from \"../../../../../utils/constants\"\r\nimport IconBtn from \"../../../../common/IconBtn\"\r\n\r\nexport default function PublishCourse() {\r\n  const { register, handleSubmit, setValue, getValues } = useForm()\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { course } = useSelector((state) => state.course)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (course?.status === COURSE_STATUS.PUBLISHED) {\r\n      setValue(\"public\", true)\r\n    }\r\n  }, [])\r\n\r\n  const goBack = () => {\r\n    dispatch(setStep(2))\r\n  }\r\n\r\n  const goToCourses = () => {\r\n    dispatch(resetCourseState())\r\n    navigate(\"/dashboard/my-courses\")\r\n  }\r\n\r\n  const handleCoursePublish = async () => {\r\n    // check if form has been updated or not\r\n    if (\r\n      (course?.status === COURSE_STATUS.PUBLISHED &&\r\n        getValues(\"public\") === true) ||\r\n      (course?.status === COURSE_STATUS.DRAFT && getValues(\"public\") === false)\r\n    ) {\r\n      // form has not been updated\r\n      // no need to make api call\r\n      goToCourses()\r\n      return\r\n    }\r\n    const formData = new FormData()\r\n    formData.append(\"courseId\", course._id)\r\n    const courseStatus = getValues(\"public\")\r\n      ? COURSE_STATUS.PUBLISHED\r\n      : COURSE_STATUS.DRAFT\r\n    formData.append(\"status\", courseStatus)\r\n    setLoading(true)\r\n    const result = await editCourseDetails(formData, token)\r\n    if (result) {\r\n      goToCourses()\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(data)\r\n    handleCoursePublish()\r\n  }\r\n\r\n  return (\r\n    <div className=\"rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-6\">\r\n      <p className=\"text-2xl font-semibold text-richblack-5\">\r\n        Publish Settings\r\n      </p>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* Checkbox */}\r\n        <div className=\"my-6 mb-8\">\r\n          <label htmlFor=\"public\" className=\"inline-flex items-center text-lg\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"public\"\r\n              {...register(\"public\")}\r\n              className=\"border-gray-300 h-4 w-4 rounded bg-richblack-500 text-richblack-400 focus:ring-2 focus:ring-richblack-5\"\r\n            />\r\n            <span className=\"ml-2 text-richblack-400\">\r\n              Make this course as public\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        {/* Next Prev Button */}\r\n        <div className=\"ml-auto flex max-w-max items-center gap-x-4\">\r\n          <button\r\n            disabled={loading}\r\n            type=\"button\"\r\n            onClick={goBack}\r\n            className=\"flex cursor-pointer items-center gap-x-2 rounded-md bg-richblack-300 py-[8px] px-[20px] font-semibold text-richblack-900\"\r\n          >\r\n            Back\r\n          </button>\r\n          {/* <IconBtn disabled={loading} text=\"Save Changes\" /> */}\r\n          <button className=\"bg-richblack-50 font-semibold px-3 py-2 rounded-md\">Save Changes</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/common/Tab.js",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/Upload.jsx",["572","573","574"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FiUploadCloud } from \"react-icons/fi\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"video-react/dist/video-react.css\";\r\nimport { Player } from \"video-react\";\r\n\r\nexport default function Upload({\r\n  name,\r\n  label,\r\n  register,\r\n  setValue,\r\n  errors,\r\n  video = false,\r\n  viewData = null,\r\n  editData = null,\r\n}) {\r\n  const { course } = useSelector((state) => state.course);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [previewSource, setPreviewSource] = useState(\r\n    viewData ? viewData : editData ? editData : \"\"\r\n  );\r\n  const inputRef = useRef(null);\r\n\r\n  const onDrop = (acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    if (file) {\r\n      previewFile(file);\r\n      setSelectedFile(file);\r\n    }\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: !video\r\n      ? \"image/*\"\r\n      : \"video/*\",\r\n    onDrop,\r\n  });\r\n\r\n  const previewFile = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setPreviewSource(reader.result);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    register(name, { required: true });\r\n  }, [register]);\r\n\r\n  useEffect(() => {\r\n    setValue(name, selectedFile);\r\n  }, [selectedFile, setValue]);\r\n\r\n  const handleBrowseClick = () => {\r\n    inputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col space-y-2\">\r\n      <label className=\"text-sm text-richblack-5\" htmlFor={name}>\r\n        {label} {!viewData && <sup className=\"text-pink-200\">*</sup>}\r\n      </label>\r\n      <div\r\n        className={`${\r\n          isDragActive ? \"bg-richblack-600\" : \"bg-richblack-700\"\r\n        } flex min-h-[250px] cursor-pointer items-center justify-center rounded-md border-2 border-dotted border-richblack-500`}\r\n        onClick={(event) => {\r\n          if (!event.target.tagName.toLowerCase() === \"input\") {\r\n            event.stopPropagation();\r\n          }\r\n        }}\r\n      >\r\n        {previewSource ? (\r\n          <div className=\"flex w-full flex-col p-6\">\r\n            {!video ? (\r\n              <img\r\n                src={previewSource}\r\n                alt=\"Preview\"\r\n                className=\"h-full w-full rounded-md object-cover\"\r\n              />\r\n            ) : (\r\n              <Player aspectRatio=\"16:9\" playsInline src={previewSource} />\r\n            )}\r\n            {!viewData && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setPreviewSource(\"\");\r\n                  setSelectedFile(null);\r\n                  setValue(name, null);\r\n                }}\r\n                className=\"mt-3 text-richblack-400 underline\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"flex w-full flex-col items-center p-6\"\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} ref={inputRef} />\r\n            <div\r\n              className=\"grid aspect-square w-14 place-items-center rounded-full bg-pure-greys-800\"\r\n              onClick={handleBrowseClick}\r\n            >\r\n              <FiUploadCloud className=\"text-2xl text-yellow-50\" />\r\n            </div>\r\n            <p className=\"mt-2 max-w-[200px] text-center text-sm text-richblack-200\">\r\n              Drag and drop an {!video ? \"image\" : \"video\"}, or click to{\" \"}\r\n              <span className=\"font-semibold text-yellow-50\">Browse</span> a\r\n              file\r\n            </p>\r\n            <ul className=\"mt-10 flex list-disc justify-between space-x-12 text-center  text-xs text-richblack-200\">\r\n              <li>Aspect ratio 16:9</li>\r\n              <li>Recommended size 1024x576</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {errors[name] && (\r\n        <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n          {label} is required\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}","/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseBuilder/NestedView.jsx",[],[],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseInformation/RequirementField.jsx",[],["575","576"],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseInformation/ChipInput.jsx",[],["577","578"],"/Users/lecher/Desktop/ByteBrighter/frontend/src/components/core/Dashboard/AddCourse/CourseBuilder/SubSectionModal.jsx",["579","580"],[],"import { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { toast } from \"react-hot-toast\"\r\nimport { RxCross2 } from \"react-icons/rx\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  createSubSection,\r\n  updateSubSection,\r\n} from \"../../../../../services/operations/courseDetailsAPI\"\r\nimport { setCourse } from \"../../../../../slices/courseSlice\"\r\nimport IconBtn from \"../../../../common/IconBtn\"\r\nimport Upload from \"../Upload\"\r\n\r\nexport default function SubSectionModal({\r\n  modalData,\r\n  setModalData,\r\n  add = false,\r\n  view = false,\r\n  edit = false,\r\n}) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n    getValues,\r\n  } = useForm()\r\n\r\n  // console.log(\"view\", view)\r\n  // console.log(\"edit\", edit)\r\n  // console.log(\"add\", add)\r\n\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState(false)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { course } = useSelector((state) => state.course)\r\n\r\n  useEffect(() => {\r\n    if (view || edit) {\r\n      // console.log(\"modalData\", modalData)\r\n      setValue(\"lectureTitle\", modalData.title)\r\n      setValue(\"lectureDesc\", modalData.description)\r\n      setValue(\"lectureVideo\", modalData.videoUrl)\r\n    }\r\n  }, [])\r\n\r\n  // detect whether form is updated or not\r\n  const isFormUpdated = () => {\r\n    const currentValues = getValues()\r\n    // console.log(\"changes after editing form values:\", currentValues)\r\n    if (\r\n      currentValues.lectureTitle !== modalData.title ||\r\n      currentValues.lectureDesc !== modalData.description ||\r\n      currentValues.lectureVideo !== modalData.videoUrl\r\n    ) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // handle the editing of subsection\r\n  const handleEditSubsection = async () => {\r\n    const currentValues = getValues()\r\n    // console.log(\"changes after editing form values:\", currentValues)\r\n    const formData = new FormData()\r\n    // console.log(\"Values After Editing form values:\", currentValues)\r\n    formData.append(\"sectionId\", modalData.sectionId)\r\n    formData.append(\"subSectionId\", modalData._id)\r\n    if (currentValues.lectureTitle !== modalData.title) {\r\n      formData.append(\"title\", currentValues.lectureTitle)\r\n    }\r\n    if (currentValues.lectureDesc !== modalData.description) {\r\n      formData.append(\"description\", currentValues.lectureDesc)\r\n    }\r\n    if (currentValues.lectureVideo !== modalData.videoUrl) {\r\n      formData.append(\"video\", currentValues.lectureVideo)\r\n    }\r\n    setLoading(true)\r\n    const result = await updateSubSection(formData, token)\r\n    if (result) {\r\n      // console.log(\"result\", result)\r\n      // update the structure of course\r\n      const updatedCourseContent = course.courseContent.map((section) =>\r\n        section._id === modalData.sectionId ? result : section\r\n      )\r\n      const updatedCourse = { ...course, courseContent: updatedCourseContent }\r\n      dispatch(setCourse(updatedCourse))\r\n    }\r\n    setModalData(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    // console.log(data)\r\n    if (view) return\r\n\r\n    if (edit) {\r\n      if (!isFormUpdated()) {\r\n        toast.error(\"No changes made to the form\")\r\n      } else {\r\n        handleEditSubsection()\r\n      }\r\n      return\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append(\"sectionId\", modalData)\r\n    formData.append(\"title\", data.lectureTitle)\r\n    formData.append(\"description\", data.lectureDesc)\r\n    formData.append(\"video\", data.lectureVideo)\r\n    setLoading(true)\r\n    const result = await createSubSection(formData, token)\r\n    if (result) {\r\n      // update the structure of course\r\n      const updatedCourseContent = course.courseContent.map((section) =>\r\n        section._id === modalData ? result : section\r\n      )\r\n      const updatedCourse = { ...course, courseContent: updatedCourseContent }\r\n      dispatch(setCourse(updatedCourse))\r\n    }\r\n    setModalData(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[1000] !mt-0 grid h-screen w-screen place-items-center overflow-auto bg-white bg-opacity-10 backdrop-blur-sm\">\r\n      <div className=\"my-10 w-11/12 max-w-[700px] rounded-lg border border-richblack-400 bg-richblack-800\">\r\n        {/* Modal Header */}\r\n        <div className=\"flex items-center justify-between rounded-t-lg bg-richblack-700 p-5\">\r\n          <p className=\"text-xl font-semibold text-richblack-5\">\r\n            {view && \"Viewing\"} {add && \"Adding\"} {edit && \"Editing\"} Lecture\r\n          </p>\r\n          <button onClick={() => (!loading ? setModalData(null) : {})}>\r\n            <RxCross2 className=\"text-2xl text-richblack-5\" />\r\n          </button>\r\n        </div>\r\n        {/* Modal Form */}\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"space-y-8 px-8 py-10\"\r\n        >\r\n          {/* Lecture Video Upload */}\r\n          <Upload\r\n            name=\"lectureVideo\"\r\n            label=\"Lecture Video\"\r\n            register={register}\r\n            setValue={setValue}\r\n            errors={errors}\r\n            video={true}\r\n            viewData={view ? modalData.videoUrl : null}\r\n            editData={edit ? modalData.videoUrl : null}\r\n          />\r\n          {/* Lecture Title */}\r\n          <div className=\"flex flex-col space-y-2\">\r\n            <label className=\"text-sm text-richblack-5\" htmlFor=\"lectureTitle\">\r\n              Lecture Title {!view && <sup className=\"text-pink-200\">*</sup>}\r\n            </label>\r\n            <input\r\n              disabled={view || loading}\r\n              id=\"lectureTitle\"\r\n              placeholder=\"Enter Lecture Title\"\r\n              {...register(\"lectureTitle\", { required: true })}\r\n              className=\"form-style w-full bg-richblack-700 rounded-md px-3 py-2 text-richblack-100\"\r\n            />\r\n            {errors.lectureTitle && (\r\n              <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n                Lecture title is required\r\n              </span>\r\n            )}\r\n          </div>\r\n          {/* Lecture Description */}\r\n          <div className=\"flex flex-col space-y-2\">\r\n            <label className=\"text-sm text-richblack-5\" htmlFor=\"lectureDesc\">\r\n              Lecture Description{\" \"}\r\n              {!view && <sup className=\"text-pink-200\">*</sup>}\r\n            </label>\r\n            <textarea\r\n              disabled={view || loading}\r\n              id=\"lectureDesc\"\r\n              placeholder=\"Enter Lecture Description\"\r\n              {...register(\"lectureDesc\", { required: true })}\r\n              className=\"form-style w-full bg-richblack-700 rounded-md px-3 py-2 text-richblack-100 min-h-[150px]\"\r\n            />\r\n            {errors.lectureDesc && (\r\n              <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n                Lecture Description is required\r\n              </span>\r\n            )}\r\n          </div>\r\n          {!view && (\r\n            <div className=\"flex bg-richblack-50 rounded-md w-fit px-3 py-1 justify-end\">\r\n              {/* <IconBtn\r\n                disabled={loading}\r\n                text={loading ? \"Loading..\" : edit ? \"Save Changes\" : \"Save\"}\r\n              /> */}\r\n              <button>\r\n              {loading ? \"Loading..\" : edit ? \"Save Changes\" : \"Save\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}",{"ruleId":"581","severity":1,"message":"582","line":158,"column":7,"nodeType":"583","messageId":"584","endLine":158,"endColumn":30},{"ruleId":"585","severity":1,"message":"586","line":46,"column":6,"nodeType":"587","endLine":46,"endColumn":8,"suggestions":"588","suppressions":"589"},{"ruleId":"585","severity":1,"message":"590","line":22,"column":6,"nodeType":"587","endLine":22,"endColumn":8,"suggestions":"591","suppressions":"592"},{"ruleId":"581","severity":1,"message":"593","line":131,"column":21,"nodeType":"583","messageId":"584","endLine":131,"endColumn":81},{"ruleId":"594","severity":1,"message":"595","line":91,"column":10,"nodeType":"596","messageId":"597","endLine":91,"endColumn":19},{"ruleId":"585","severity":1,"message":"598","line":35,"column":6,"nodeType":"587","endLine":35,"endColumn":8,"suggestions":"599","suppressions":"600"},{"ruleId":"594","severity":1,"message":"601","line":16,"column":7,"nodeType":"596","messageId":"597","endLine":16,"endColumn":15},{"ruleId":"594","severity":1,"message":"602","line":9,"column":9,"nodeType":"596","messageId":"597","endLine":9,"endColumn":17},{"ruleId":"585","severity":1,"message":"603","line":24,"column":6,"nodeType":"587","endLine":24,"endColumn":8,"suggestions":"604","suppressions":"605"},{"ruleId":"594","severity":1,"message":"606","line":3,"column":10,"nodeType":"596","messageId":"597","endLine":3,"endColumn":31},{"ruleId":"585","severity":1,"message":"607","line":25,"column":6,"nodeType":"587","endLine":25,"endColumn":8,"suggestions":"608"},{"ruleId":"594","severity":1,"message":"609","line":11,"column":8,"nodeType":"596","messageId":"597","endLine":11,"endColumn":15},{"ruleId":"585","severity":1,"message":"610","line":48,"column":6,"nodeType":"587","endLine":48,"endColumn":62,"suggestions":"611"},{"ruleId":"585","severity":1,"message":"603","line":27,"column":8,"nodeType":"587","endLine":27,"endColumn":10,"suggestions":"612"},{"ruleId":"594","severity":1,"message":"613","line":4,"column":8,"nodeType":"596","messageId":"597","endLine":4,"endColumn":22},{"ruleId":"594","severity":1,"message":"614","line":6,"column":3,"nodeType":"596","messageId":"597","endLine":6,"endColumn":21},{"ruleId":"585","severity":1,"message":"598","line":30,"column":6,"nodeType":"587","endLine":30,"endColumn":8,"suggestions":"615","suppressions":"616"},{"ruleId":"594","severity":1,"message":"617","line":1,"column":8,"nodeType":"596","messageId":"597","endLine":1,"endColumn":13},{"ruleId":"594","severity":1,"message":"618","line":3,"column":10,"nodeType":"596","messageId":"597","endLine":3,"endColumn":33},{"ruleId":"594","severity":1,"message":"619","line":1,"column":10,"nodeType":"596","messageId":"597","endLine":1,"endColumn":18},{"ruleId":"594","severity":1,"message":"620","line":7,"column":10,"nodeType":"596","messageId":"597","endLine":7,"endColumn":18},{"ruleId":"594","severity":1,"message":"621","line":7,"column":28,"nodeType":"596","messageId":"597","endLine":7,"endColumn":38},{"ruleId":"581","severity":1,"message":"593","line":30,"column":15,"nodeType":"583","messageId":"584","endLine":30,"endColumn":81},{"ruleId":"594","severity":1,"message":"622","line":22,"column":10,"nodeType":"596","messageId":"597","endLine":22,"endColumn":18},{"ruleId":"585","severity":1,"message":"623","line":12,"column":6,"nodeType":"587","endLine":12,"endColumn":16,"suggestions":"624"},{"ruleId":"594","severity":1,"message":"609","line":8,"column":8,"nodeType":"596","messageId":"597","endLine":8,"endColumn":15},{"ruleId":"585","severity":1,"message":"625","line":26,"column":6,"nodeType":"587","endLine":26,"endColumn":8,"suggestions":"626","suppressions":"627"},{"ruleId":"585","severity":1,"message":"628","line":40,"column":6,"nodeType":"587","endLine":40,"endColumn":62,"suggestions":"629","suppressions":"630"},{"ruleId":"594","severity":1,"message":"631","line":4,"column":10,"nodeType":"596","messageId":"597","endLine":4,"endColumn":19},{"ruleId":"594","severity":1,"message":"632","line":4,"column":21,"nodeType":"596","messageId":"597","endLine":4,"endColumn":34},{"ruleId":"594","severity":1,"message":"633","line":22,"column":9,"nodeType":"596","messageId":"597","endLine":22,"endColumn":17},{"ruleId":"594","severity":1,"message":"609","line":6,"column":8,"nodeType":"596","messageId":"597","endLine":6,"endColumn":15},{"ruleId":"594","severity":1,"message":"609","line":6,"column":8,"nodeType":"596","messageId":"597","endLine":6,"endColumn":15},{"ruleId":"594","severity":1,"message":"634","line":21,"column":13,"nodeType":"596","messageId":"597","endLine":21,"endColumn":16},{"ruleId":"594","severity":1,"message":"633","line":11,"column":9,"nodeType":"596","messageId":"597","endLine":11,"endColumn":17},{"ruleId":"594","severity":1,"message":"635","line":1,"column":17,"nodeType":"596","messageId":"597","endLine":1,"endColumn":26},{"ruleId":"594","severity":1,"message":"636","line":1,"column":28,"nodeType":"596","messageId":"597","endLine":1,"endColumn":34},{"ruleId":"594","severity":1,"message":"637","line":1,"column":36,"nodeType":"596","messageId":"597","endLine":1,"endColumn":44},{"ruleId":"594","severity":1,"message":"638","line":2,"column":10,"nodeType":"596","messageId":"597","endLine":2,"endColumn":23},{"ruleId":"594","severity":1,"message":"609","line":5,"column":8,"nodeType":"596","messageId":"597","endLine":5,"endColumn":15},{"ruleId":"594","severity":1,"message":"639","line":12,"column":10,"nodeType":"596","messageId":"597","endLine":12,"endColumn":18},{"ruleId":"585","severity":1,"message":"640","line":57,"column":6,"nodeType":"587","endLine":57,"endColumn":8,"suggestions":"641"},{"ruleId":"642","severity":1,"message":"643","line":133,"column":40,"nodeType":"596","messageId":"644","endLine":133,"endColumn":48},{"ruleId":"642","severity":1,"message":"645","line":134,"column":38,"nodeType":"596","messageId":"644","endLine":134,"endColumn":44},{"ruleId":"594","severity":1,"message":"609","line":17,"column":8,"nodeType":"596","messageId":"597","endLine":17,"endColumn":15},{"ruleId":"594","severity":1,"message":"609","line":9,"column":8,"nodeType":"596","messageId":"597","endLine":9,"endColumn":15},{"ruleId":"585","severity":1,"message":"646","line":24,"column":6,"nodeType":"587","endLine":24,"endColumn":8,"suggestions":"647"},{"ruleId":"594","severity":1,"message":"648","line":19,"column":11,"nodeType":"596","messageId":"597","endLine":19,"endColumn":17},{"ruleId":"585","severity":1,"message":"649","line":51,"column":6,"nodeType":"587","endLine":51,"endColumn":16,"suggestions":"650"},{"ruleId":"585","severity":1,"message":"649","line":55,"column":6,"nodeType":"587","endLine":55,"endColumn":30,"suggestions":"651"},{"ruleId":"585","severity":1,"message":"652","line":22,"column":6,"nodeType":"587","endLine":22,"endColumn":8,"suggestions":"653","suppressions":"654"},{"ruleId":"585","severity":1,"message":"655","line":27,"column":6,"nodeType":"587","endLine":27,"endColumn":24,"suggestions":"656","suppressions":"657"},{"ruleId":"585","severity":1,"message":"658","line":31,"column":6,"nodeType":"587","endLine":31,"endColumn":8,"suggestions":"659","suppressions":"660"},{"ruleId":"585","severity":1,"message":"655","line":36,"column":6,"nodeType":"587","endLine":36,"endColumn":13,"suggestions":"661","suppressions":"662"},{"ruleId":"594","severity":1,"message":"609","line":12,"column":8,"nodeType":"596","messageId":"597","endLine":12,"endColumn":15},{"ruleId":"585","severity":1,"message":"663","line":46,"column":6,"nodeType":"587","endLine":46,"endColumn":8,"suggestions":"664"},"react/jsx-pascal-case","Imported JSX component Scroll_To_Top_Button must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["665"],["666"],"React Hook useEffect has missing dependencies: 'navigate' and 'signupData'. Either include them or remove the dependency array.",["667"],["668"],"Imported JSX component Course_Card must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'course_id' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'courseId', 'dispatch', and 'token'. Either include them or remove the dependency array.",["669"],["670"],"'subLinks' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["671"],["672"],"'BiDotsVerticalRounded' is defined but never used.","React Hook useEffect has a missing dependency: 'getEnrolledCourses'. Either include it or remove the dependency array.",["673"],"'IconBtn' is defined but never used.","React Hook useEffect has missing dependencies: 'courseId', 'navigate', 'sectionId', and 'subSectionId'. Either include them or remove the dependency array.",["674"],["675"],"'UpdatePassword' is defined but never used.","'fetchCourseDetails' is defined but never used.",["676"],["677"],"'React' is defined but never used.","'updateCompletedLectures' is defined but never used.","'FcGoogle' is defined but never used.","'Autoplay' is defined but never used.","'Navigation' is defined but never used.","'courseId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'course._id'. Either include it or remove the dependency array. If 'setActive' needs the current value of 'course._id', you can also switch to useReducer instead of useState and read 'course._id' in the reducer.",["678"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["679"],["680"],"React Hook useEffect has missing dependencies: 'sectionId' and 'subSectionId'. Either include them or remove the dependency array.",["681"],["682"],"'setCourse' is defined but never used.","'setEditCourse' is defined but never used.","'dispatch' is assigned a value but never used.","'res' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'AiOutlineDown' is defined but never used.","'BiUpload' is defined but never used.","React Hook useEffect has missing dependencies: 'course.category', 'course.courseDescription', 'course.courseName', 'course.instructions', 'course.price', 'course.tag', 'course.thumbnail', 'course.whatYouWillLearn', 'editCourse', and 'setValue'. Either include them or remove the dependency array.",["683"],"no-use-before-define","'formData' was used before it was defined.","usedBeforeDefined","'result' was used before it was defined.","React Hook useEffect has missing dependencies: 'course?.status' and 'setValue'. Either include them or remove the dependency array.",["684"],"'course' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["685"],["686"],"React Hook useEffect has missing dependencies: 'course?.instructions', 'editCourse', 'name', and 'register'. Either include them or remove the dependency array. If 'register' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["687"],["688"],"React Hook useEffect has missing dependencies: 'name' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["689"],["690"],"React Hook useEffect has missing dependencies: 'course?.tag', 'editCourse', 'name', and 'register'. Either include them or remove the dependency array. If 'register' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["691"],["692"],["693"],["694"],"React Hook useEffect has missing dependencies: 'edit', 'modalData.description', 'modalData.title', 'modalData.videoUrl', 'setValue', and 'view'. Either include them or remove the dependency array.",["695"],{"desc":"696","fix":"697"},{"kind":"698","justification":"699"},{"desc":"700","fix":"701"},{"kind":"698","justification":"699"},{"desc":"702","fix":"703"},{"kind":"698","justification":"699"},{"desc":"704","fix":"705"},{"kind":"698","justification":"699"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"704","fix":"710"},{"desc":"702","fix":"711"},{"kind":"698","justification":"699"},{"desc":"712","fix":"713"},{"desc":"714","fix":"715"},{"kind":"698","justification":"699"},{"desc":"716","fix":"717"},{"kind":"698","justification":"699"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"kind":"698","justification":"699"},{"desc":"728","fix":"729"},{"kind":"698","justification":"699"},{"desc":"730","fix":"731"},{"kind":"698","justification":"699"},{"desc":"732","fix":"733"},{"kind":"698","justification":"699"},{"desc":"734","fix":"735"},"Update the dependencies array to be: [dispatch, navigate]",{"range":"736","text":"737"},"directive","","Update the dependencies array to be: [navigate, signupData]",{"range":"738","text":"739"},"Update the dependencies array to be: [courseId, dispatch, token]",{"range":"740","text":"741"},"Update the dependencies array to be: [token]",{"range":"742","text":"743"},"Update the dependencies array to be: [getEnrolledCourses]",{"range":"744","text":"745"},"Update the dependencies array to be: [courseSectionData, courseEntireData, location.pathname, courseId, sectionId, subSectionId, navigate]",{"range":"746","text":"747"},{"range":"748","text":"743"},{"range":"749","text":"741"},"Update the dependencies array to be: [course._id, isActive]",{"range":"750","text":"751"},"Update the dependencies array to be: [setValue]",{"range":"752","text":"753"},"Update the dependencies array to be: [courseSectionData, courseEntireData, location.pathname, sectionId, subSectionId]",{"range":"754","text":"755"},"Update the dependencies array to be: [course.category, course.courseDescription, course.courseName, course.instructions, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",{"range":"756","text":"757"},"Update the dependencies array to be: [course?.status, setValue]",{"range":"758","text":"759"},"Update the dependencies array to be: [name, register]",{"range":"760","text":"761"},"Update the dependencies array to be: [name, selectedFile, setValue]",{"range":"762","text":"763"},"Update the dependencies array to be: [course?.instructions, editCourse, name, register]",{"range":"764","text":"765"},"Update the dependencies array to be: [name, requirementsList, setValue]",{"range":"766","text":"767"},"Update the dependencies array to be: [course?.tag, editCourse, name, register]",{"range":"768","text":"769"},"Update the dependencies array to be: [chips, name, setValue]",{"range":"770","text":"771"},"Update the dependencies array to be: [edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]",{"range":"772","text":"773"},[2104,2106],"[dispatch, navigate]",[834,836],"[navigate, signupData]",[1439,1441],"[courseId, dispatch, token]",[822,824],"[token]",[824,826],"[getEnrolledCourses]",[1960,2016],"[courseSectionData, courseEntireData, location.pathname, courseId, sectionId, subSectionId, navigate]",[1112,1114],[1044,1046],[432,442],"[course._id, isActive]",[864,866],"[setValue]",[1540,1596],"[courseSectionData, courseEntireData, location.pathname, sectionId, subSectionId]",[1996,1998],"[course.category, course.courseDescription, course.courseName, course.instructions, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",[946,948],"[course?.status, setValue]",[1286,1296],"[name, register]",[1363,1387],"[name, selectedFile, setValue]",[647,649],"[course?.instructions, editCourse, name, register]",[779,797],"[name, requirementsList, setValue]",[932,934],"[course?.tag, editCourse, name, register]",[1053,1060],"[chips, name, setValue]",[1299,1301],"[edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]"]